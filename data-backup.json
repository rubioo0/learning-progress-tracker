{
  "exportDate": "2025-09-02T16:50:51.183Z",
  "topics": [
    {
      "id": 4298,
      "title": "Perform/Execute tests based on predefined Test Cases and/or Scenarios. Communicate Test Results.",
      "description": "**Descriptions:**\nPre-conditions for test execution.\n• Main test execution activities.\n• Types of project environments and differences between them.\n\n**Artifacts:**\nTest results - in the form of simple test reports, email statuses, or test runs created in software.",
      "category": "Junior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "in-progress",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 18:07:35",
      "order_index": 0,
      "attachment_filename": "48160f596cbe4fe2fbf738cb222ec8d9",
      "attachment_original_name": "theme1.txt",
      "attachment_path": "uploads\\48160f596cbe4fe2fbf738cb222ec8d9",
      "questions": []
    },
    {
      "id": 4299,
      "title": "Prepare Test Cases and/or Scenarios using common Test Design techniques in accordance with requirements.",
      "description": "**Descriptions:**\nPurpose and different types of test documentation.\n• Test Levels and test types.\n• Main specification-based (Black-box) test design techniques: decision table, state transition, boundary value analysis, equivalence partitioning.\n\n**Artifacts:**\nTest cases, checklists, and other low-level test documentation.",
      "category": "Junior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:51:18",
      "order_index": 1,
      "attachment_filename": "21e1916ce36a90bbe272430639c3d9fc",
      "attachment_original_name": "theme2.txt",
      "attachment_path": "uploads\\21e1916ce36a90bbe272430639c3d9fc",
      "questions": []
    },
    {
      "id": 4300,
      "title": "Report defects found throughout testing.",
      "description": "**Descriptions:**\nWhat are Defect reports and how to write good ones.\n• Defect severity and priority.\n• Defect lifecycle.\n\n**Artifacts:**\nExamples of defect reports.",
      "category": "Junior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:51:33",
      "order_index": 2,
      "attachment_filename": "771a8f8b72e71f6bb6c071aee1b5f778",
      "attachment_original_name": "theme3.txt",
      "attachment_path": "uploads\\771a8f8b72e71f6bb6c071aee1b5f778",
      "questions": []
    },
    {
      "id": 4301,
      "title": "Create Test Design sufficient for Automation.",
      "description": "**Descriptions:**\nStructure-based and experience-based test design techniques.\n• Factors that influence the selection of appropriate Test Design techniques.\n\n**Artifacts:**\nTest cases, checklists, and other low-level test documentation that was later turned into automated tests.",
      "category": "Middle Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:51:42",
      "order_index": 3,
      "attachment_filename": "cb98518089358ab78d35db290817e500",
      "attachment_original_name": "theme4.txt",
      "attachment_path": "uploads\\cb98518089358ab78d35db290817e500",
      "questions": []
    },
    {
      "id": 4302,
      "title": "Evidence Test Results and provide a detailed Test Report that contains information on: What was tested, What was not tested, What types of tests were used, Defects found, Successful Test Evidences.",
      "description": "**Descriptions:**\nTest reports: Information what was tested, What was not tested, What types of tests were used, Defects found, Successful test evidences.\n\n**Artifacts:**\nTest Reports (either manually written or compiled by software).",
      "category": "Middle Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:51:50",
      "order_index": 4,
      "attachment_filename": "83b03dd86c66c8edccb03d62be5be712",
      "attachment_original_name": "theme5.txt",
      "attachment_path": "uploads\\83b03dd86c66c8edccb03d62be5be712",
      "questions": []
    },
    {
      "id": 4303,
      "title": "Implements Test Strategies and Test Plans sections.",
      "description": "**Descriptions:**\nCommon Test Strategy/Test Plan structure and content.\n\n**Artifacts:**\nHigh-level test documentation (test plan, test strategy, articles/pages describing test process in a team) that was modified by an associate.",
      "category": "Middle Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:51:57",
      "order_index": 5,
      "attachment_filename": "c7f2d0b2648f52184cf9c40cc84cce28",
      "attachment_original_name": "theme6.txt",
      "attachment_path": "uploads\\c7f2d0b2648f52184cf9c40cc84cce28",
      "questions": []
    },
    {
      "id": 4304,
      "title": "Validate requirements traceability when working on Test Design.",
      "description": "**Descriptions:**\nImportance and purpose of requirements traceability.\n• Purpose of traceability and dependency matrixes.\n\n**Artifacts:**\nLinks between automated and manual test cases; links between manual test cases and requirements, features, or user stories that they cover.",
      "category": "Middle Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:52:02",
      "order_index": 6,
      "attachment_filename": "49a531082a61e468552926a2814fc118",
      "attachment_original_name": "theme7.txt",
      "attachment_path": "uploads\\49a531082a61e468552926a2814fc118",
      "questions": []
    },
    {
      "id": 4305,
      "title": "Create Test Strategy and/or Test Plans from scratch.",
      "description": "**Descriptions:**\nCommon Test Strategy/Test Plan structure and content.\n\n**Artifacts:**\nHigh-level test documentation (test plan, test strategy, articles/pages describing test process in a team) that was implemented by associate.",
      "category": "Senior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:52:07",
      "order_index": 7,
      "attachment_filename": "1d67855f6095d83796aebd22dd0df5d9",
      "attachment_original_name": "theme8.txt",
      "attachment_path": "uploads\\1d67855f6095d83796aebd22dd0df5d9",
      "questions": []
    },
    {
      "id": 4306,
      "title": "Monitor and control Testing/Test Automation related risks.",
      "description": "**Descriptions:**\nCommon strategies for controlling risks.\n\n**Artifacts:**\nRisks that can affect testing/test automation are documented, risk probability and impact are defined, mitigation plan is in place.",
      "category": "Senior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:52:12",
      "order_index": 8,
      "attachment_filename": "f4ad3ef437f06abe6043851300c84a9a",
      "attachment_original_name": "theme9.txt",
      "attachment_path": "uploads\\f4ad3ef437f06abe6043851300c84a9a",
      "questions": []
    },
    {
      "id": 4307,
      "title": "Monitor and ensure content and structure of Testing related documentation is up-to-date.",
      "description": "**Descriptions:**\nCommon Test Strategy/Test Plan structure and content.\n\n**Artifacts:**\nHigh-level test documentation is stored in location available for the whole team with revision history implemented.",
      "category": "Senior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:52:17",
      "order_index": 9,
      "attachment_filename": "1d907e4a0760098ad5994e4e78ae8c26",
      "attachment_original_name": "theme10.txt",
      "attachment_path": "uploads\\1d907e4a0760098ad5994e4e78ae8c26",
      "questions": []
    },
    {
      "id": 4308,
      "title": "Use impact analysis when planning test execution activities.",
      "description": "**Descriptions:**\nPurpose and approach to impact analysis.\n• Roles and responsibilities during impact analysis.\n\n**Artifacts:**\nDependency matrix, Traceability matrix, Dynamically changing Regression scope.",
      "category": "Senior Test Automation Engineer",
      "module": "Fundamental Test Process",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:55:39",
      "order_index": 10,
      "attachment_filename": "a309c127a2394169122af90d43b7a757",
      "attachment_original_name": "theme11.txt",
      "attachment_path": "uploads\\a309c127a2394169122af90d43b7a757",
      "questions": []
    },
    {
      "id": 4309,
      "title": "Participate in estimation sessions, propose estimation for small size or low complexity tasks.",
      "description": "**Descriptions:**\nScope Concept.\n• Estimates, Targets, and Commitments.\n• Analogy-based estimations.\n• Overestimate vs Underestimate.\n• Planning Poker.\n\n**Artifacts:**\nAssociate's tasks in project management tool with specified estimates.",
      "category": "Junior Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 17:58:59",
      "order_index": 11,
      "attachment_filename": "f68ff715969ea0401ff82c145e941412",
      "attachment_original_name": "theme12.txt",
      "attachment_path": "uploads\\f68ff715969ea0401ff82c145e941412",
      "questions": []
    },
    {
      "id": 4310,
      "title": "Apply approaches that improve precision of estimation and reduce uncertainty.",
      "description": "**Descriptions:**\nCommon sources of estimation errors.\n• Cone of Uncertainty.\n\n**Artifacts:**\nAssociate's tasks in project management tool with specified estimates.",
      "category": "Middle Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": "",
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-13 18:02:08",
      "order_index": 12,
      "attachment_filename": "6902bcdf71f7fec45a7829ed8597c891",
      "attachment_original_name": "theme13.txt",
      "attachment_path": "uploads\\6902bcdf71f7fec45a7829ed8597c891",
      "questions": []
    },
    {
      "id": 4311,
      "title": "Identify risks associated with the particular technical task, propose actions to minimize their impact.",
      "description": "**Descriptions:**\nWhat is risk.\n• Difference between Risk, Issue and Problem.\n• Difference between risk probability and impact.\n• Identification of Causes and Effects.\n• Purpose of Risk Management.\n\n**Artifacts:**\nAssociate's tasks in project management tool with specified estimates.",
      "category": "Middle Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 13,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4312,
      "title": "Provide estimation for task of small size or low complexity based on analogue or previous experience.",
      "description": "**Descriptions:**\nCount, Compute, Judge techniques.\n• Expert judgement estimations.\n\n**Artifacts:**\nAssociate's tasks in project management tool with specified estimates.",
      "category": "Middle Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 14,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4313,
      "title": "Build risk matrixes to assess probability and potential impact of risks identified.",
      "description": "**Descriptions:**\nBasic techniques that are used during risk identification( Brainstorming, Interviewing, Delphi technique).\n• Technical and business factors that may have an impact on Risk Analysis.\n\n**Artifacts:**\nRisks that can affect project estimates are documented, risk probability and impact are defined.",
      "category": "Senior Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 15,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4314,
      "title": "Collect estimation metrics and use historical data to refine estimates.",
      "description": "**Descriptions:**\nUsing Historical Data to Refine Estimates.\n\n**Artifacts:**\nHistorical data for project estimates: planned vs actual effort, planned vs actual end date, planned velocity vs actual velocity etc.",
      "category": "Senior Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 16,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4315,
      "title": "Perform estimation for medium or large size tasks by using decomposition and recomposition techniques.",
      "description": "**Descriptions:**\nDecomposition and Recomposition.\n• Identification of Causes and Effects.\n\n**Artifacts:**\nAssociate's tasks of medium or large size in project management tool with specified estimates.",
      "category": "Senior Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 17,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4316,
      "title": "Utilize approaches for building Work Break Down Structure to support bottom-up estimation.",
      "description": "**Descriptions:**\nBottom-up estimates.\n• Work Breakdown Structure (WBS).\n• Activity breakdown.\n• PERT analysis.\n\n**Artifacts:**\nDocumented evidence of applied estimation techniques (refer to the list above).",
      "category": "Senior Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 18,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4317,
      "title": "Utilize parametric and size based estimation models.",
      "description": "**Descriptions:**\nParametric estimation models:\n• COCOMO II, COSYMO.\n• Proxy based estimation models:\n• T-Short sizing.\n\n**Artifacts:**\nDocumented evidence of applied estimation techniques (refer to the list above).",
      "category": "Senior Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 19,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4318,
      "title": "Apply qualitative analysis techniques during risk management process.",
      "description": "**Descriptions:**\nTechniques that are used during qualitative risk analysis:  Root Cause analysis, SWOT analysis.\n\n**Artifacts:**\nDocumented evidence of applied estimation techniques (refer to the list above).",
      "category": "Lead Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 20,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4319,
      "title": "Estimate large scopes of work (sprint, milestone, project phase) by utilizing appropriate techniques.",
      "description": "**Descriptions:**\nEstimation techniques applicability considering: Estimation target, Size of project, Development stage, Iterative vs Sequential, Possible Accuracy.\n\n**Artifacts:**\nDocumented evidence of estimating large scopes of work.",
      "category": "Lead Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 21,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4320,
      "title": "Perform story based scope definition: scoping project, release planning.",
      "description": "**Descriptions:**\nStory based scope definition: scoping project, release planning.\n\n**Artifacts:**\nPrioritized set of stories with defined scope for implementation of Test Automation that covers implementation of particular project / phase / milestone.",
      "category": "Lead Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 22,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4321,
      "title": "Validate estimates given by other engineers.",
      "description": "**Descriptions:**\nSpecial cases in estimating: Size, Effort, Schedule.\n\n**Artifacts:**\nOral examples of such activities.",
      "category": "Lead Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 23,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4322,
      "title": "Build Risk Management plans to foresee risks, estimate impacts, and define responses to issues.",
      "description": "**Descriptions:**\nRisk response planning: Avoidance, Transference, Mitigation, Acceptance.\n\n**Artifacts:**\nRisk Management Plan with defined risk control strategy.",
      "category": "Expert Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 24,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4323,
      "title": "Identify and assess risks that can impact particular project and perform their quantitive analysis.",
      "description": "**Descriptions:**\nSensitivity Analysis, Modeling and simulation, Decision Tree analysis.\n\n**Artifacts:**\nDocumented outcomes from quantitive analysis applied to project risks.",
      "category": "Expert Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 25,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4324,
      "title": "Provide preliminary estimation for project part or complete project during pre-sales or project initiation phase.",
      "description": "**Descriptions:**\nRisk Management plan.\n• Risk Qualitative & Quantitive Analysis.\n\n**Artifacts:**\nDocument or presentation that describes timeframe with preliminary estimated milestones for project initiation phase (section in TA Vision / TA Strategy etc).",
      "category": "Expert Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 26,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4325,
      "title": "Take an active part in T-short sizing sessions with client on project start from scratch.",
      "description": "**Descriptions:**\nProxy based estimations.\n\n**Artifacts:**\nT-short sizing sessions outcomes.",
      "category": "Expert Test Automation Engineer",
      "module": "Estimation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 27,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4326,
      "title": "Clarify requirements with internal project stakeholders (proactively ask questions if something is unclear)",
      "description": "**Descriptions:**\nThis job includes proactively seeking clarification and asking questions when something is unclear in the requirements of the system under test. This proactive approach promotes accurate and efficient test analysis, contributing to the delivery of high-quality software solutions. Examples of internal stakeholders for a QC engineer include business analysts, requirements managers, product owners who are part of the SoftServe team, or colleagues with other roles within the SoftServe team.\n\n**Artifacts:**\nAny evidence of requirements clarification (like e-mail, user stories, comments, etc.).\n\n**Additional Information:**\nknowledge: Project team roles and responsibilities",
      "category": "Junior Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 28,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4327,
      "title": "Understand requirements described in project documentation (specifications, user stories, user guides, and other artifacts that serve as requirements)",
      "description": "**Descriptions:**\n1. Definition of a Requirement\n• 2. Why do requirements matter?\n• 3. Requirements levels and types.\n• 4. Types of documents via which requirements can be communicated\n• 5. Difference between functional and non-functional requirements\n\n**Artifacts:**\nExample of requirement covered by test cases (e.g. user stories with testing sub-tasks).",
      "category": "Junior Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 29,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4328,
      "title": "Clarify requirements with external project stakeholders (client, BA from a client side, etc.)",
      "description": "**Descriptions:**\nRequirements Elicitation techniques (prepare for, conduct, and confirm results of elicitation session)\n\n**Artifacts:**\nAny evidence of requirements clarification (like e-mail, user stories, comments, etc.).",
      "category": "Middle Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 30,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4329,
      "title": "Validate the defined requirements using test techniques (requirements validity, consistency, completeness, realism, and verifiability)",
      "description": "**Descriptions:**\n1. Characteristics of good requirements\n• 2. Gherkin language specification for requirements analysis\n• 3. Static testing techniques (reviews, walkthrough, inspection)\n• 4. Static analysis\n\n**Artifacts:**\ne-mail, user stories, comments.",
      "category": "Middle Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 31,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4330,
      "title": "Provide suggestions for requirements prioritization.",
      "description": "**Descriptions:**\nImportance and purpose of requirements prioritization.\n\n**Artifacts:**\nPrioritized project/sprint backlog.",
      "category": "Senior Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 32,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4331,
      "title": "Track changes and gaps in requirements from a testing perspective and feature dependencies. Communicate the impact of the changes or missing requirements",
      "description": "**Descriptions:**\n1. Requirements Traceability matrix\n• 2. Requirements Analysis\n\n**Artifacts:**\ne-mail, user stories, comments, etc.",
      "category": "Senior Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 33,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4332,
      "title": "dentify requirements gaps and propose solutions on how to resolve them.",
      "description": "**Descriptions:**\nGaps in requirements and their impact.\n\n**Artifacts:**\nStories / requirements that were updated by associate.",
      "category": "Lead Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 34,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4333,
      "title": "Update requirements documentation based on information gathered from stakeholders, PO, or other client representatives for individual test need.",
      "description": "**Descriptions:**\nHow to write good requirements. Requirements testability.\n\n**Artifacts:**\nStories / requirements that were updated by associate (e.g. during Planning session).",
      "category": "Lead Test Automation Engineer",
      "module": "Test Analysis",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 35,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4334,
      "title": "Follow defined project development methodology, and participate in related activities.",
      "description": "**Descriptions:**\nAgile software development concept:\n• - Types: Scrum, Kanban etc\n• - Roles and responsibilities\n• - Ceremonies.\n\n**Artifacts:**\nAssociate can list all of the recurring project meetings that he attends as well as the methodology used on the project.",
      "category": "Junior Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 36,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4335,
      "title": "Follow priorities of tasks set on the project and project schedule.",
      "description": "**Artifacts:**\nAssociate can describe his/her approach for selecting tasks from the backlog; can explain how and by whom priorities are set up on the project.",
      "category": "Junior Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 37,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4336,
      "title": "Highlights potential issues to Senior staff (underestimation, invalid requirements, blockers).",
      "description": "**Descriptions:**\nTypical Project Team structure and Project Team roles and responsibilities.\n\n**Artifacts:**\nExamples of highlighted issues.",
      "category": "Junior Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 38,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4337,
      "title": "Agree task priorities with Senior staff considering project schedule, stages and milestones, priorities, and expected delivery date.",
      "description": "**Artifacts:**\nAssociate can describe his/her approach for selecting tasks from the backlog; can enumerate factors that can affect task priorities.",
      "category": "Middle Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 39,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4338,
      "title": "Identify stakeholders for a particular task. Communicate and address issues in accordance with their roles and responsibilities.",
      "description": "**Descriptions:**\nCooperation and common process flow between roles in Project Team.\n\n**Artifacts:**\nAssociate can name project stakeholders and their areas of responsibility.\n• Any other evidence of addressing issues on the project (e.g. emails).",
      "category": "Middle Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 40,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4339,
      "title": "Enforce project conventions and processes.",
      "description": "**Descriptions:**\nProject specific conventions and processes.\n\n**Artifacts:**\nExamples of such cases.",
      "category": "Senior Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 41,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4340,
      "title": "Identify and communicate places for improvements in current project development process.",
      "description": "**Descriptions:**\nScrum vs Kanban: applicability.\n• Definition of ready and Definition of Done.\n\n**Artifacts:**\nAny documented evidence (documents, presentations etc) of suggesting improvements to current project development process.",
      "category": "Senior Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 42,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4341,
      "title": "Set up task priorities considering project schedule, stages and milestones, priorities, and expected delivery date.",
      "description": "**Artifacts:**\nPrioritized project/sprint backlog for associate's tasks.",
      "category": "Senior Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 43,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4342,
      "title": "Perform project process supervision and guidance in accordance with project type and model.",
      "description": "**Descriptions:**\nMain Soft Serve Project Types in accordance with Project Excellence Ecosystem: SoftServe owned, Customer owned, Shared Ownership, SLA Based.\n• Soft Serve Project Excellence Models.\n\n**Artifacts:**\nParticipation in project and functional healthchecks.\n• Quality related best practices from PrEX catalog are utilized on a project.",
      "category": "Lead Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 44,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4343,
      "title": "Set up priorities for the team considering project schedule, stages and milestones, priorities, and expected delivery date.",
      "description": "**Artifacts:**\nPrioritized project/sprint backlog for testing related tasks.",
      "category": "Lead Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 45,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4344,
      "title": "Utilize approaches and metrics on practice to ensure project process transparency.",
      "description": "**Descriptions:**\nScrum Metrics: Sprint Burndown, Team Velocity, Planned-to-Done Ratio etc.\n• Kanban Metrics: Cycle Time, Throughput, Due Date Performance, Blockages, Quality etc.\n\n**Artifacts:**\nExamples of project/sprint metrics that are collected on regular basis.",
      "category": "Lead Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 46,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4345,
      "title": "Analyze project requirements and setup project development approach in accordance with results.",
      "description": "**Descriptions:**\nSoftServe Test Automation assessment methodology.\n\n**Artifacts:**\nParticipation in Software Testing Process Assessment. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 47,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4346,
      "title": "Perform project development process assessments, improvements, and governance.",
      "description": "**Descriptions:**\nSoftServe Test Automation assessment methodology.\n\n**Artifacts:**\nParticipation in Software Testing Process Assessment. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "Engineering Management",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 48,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4347,
      "title": "Identify feasibility, communicate limitations, and possibility of Test Automation in relation to the particular task.",
      "description": "**Descriptions:**\nTA Essentials: Definition, Objectives, Tasks, Advantages, Disadvantages.\n• Differences between: Unit, Integration, UI, API test automation.",
      "category": "Junior Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 49,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4348,
      "title": "Define suitable scope of Automation (based on automation pyramid, requirements, limitations, etc.) for the particular task.",
      "description": "**Descriptions:**\nTest Automation Pyramid Concept.\n\n**Artifacts:**\nExamples of  selected automation scope (tests, workflows, checklists) for particular task or feature coverage.",
      "category": "Middle Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 50,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4349,
      "title": "Track Test Automation operational metrics.",
      "description": "**Descriptions:**\nCommon TA operational metrics:\n• - Test Execution Duration\n• - Execution Frequency\n• - Test Success Ratio\n• - Tests Failures Distribution.\n\n**Artifacts:**\nExamples of Test Automation operational metrics that are collected on a regular basis.",
      "category": "Middle Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 51,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4350,
      "title": "Define suitable scope and level of Automation (based on automation pyramid, requirements, limitations, etc.) for the particular feature.",
      "description": "**Descriptions:**\nFactors that impact test automation priority and scope: Functionality Implementation State, Bug Fixes, Past Test Execution Coverage, Past Test Execution Failure Rate.\n\n**Artifacts:**\nExamples of selected automation scope (tests, workflows, checklists) and level (UI, API, Integration, Unit) for particular feature coverage.",
      "category": "Senior Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 52,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4351,
      "title": "Perform measurement of common Test Automation effectiveness metrics.",
      "description": "**Descriptions:**\nCommon TA effectiveness metrics:\n• Test Automation Coverage, Automation Index, Test Automation Progress, Automation Efficiency.\n\n**Artifacts:**\nExamples of Test Automation effectiveness metrics that are collected on regular basis.",
      "category": "Senior Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 53,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4352,
      "title": "Measure Test Automation ROI.",
      "description": "**Descriptions:**\nDifferent approaches to measuring TA ROI.\n\n**Artifacts:**\nTest Automation ROI for the project is calculated and documented.",
      "category": "Lead Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 54,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4353,
      "title": "Plan and drive Test Automation solution and process improvements.",
      "description": "**Descriptions:**\nTA Methodologies: BDD, KDD, TDD, DDT. Pros & cons.\n\n**Artifacts:**\nPlan/tasks for test automation solution improvements are documented.",
      "category": "Lead Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 55,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4354,
      "title": "Select and measure relevant metrics that reveal value and bring transparency to Test Automation activities.",
      "description": "**Descriptions:**\nTa Operational & TA Effectiveness Metrics.\n\n**Artifacts:**\nTest Automation operational and effectiveness metrics are defined for the project.",
      "category": "Lead Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 56,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4355,
      "title": "Identify the most appropriate Test Automation approach as the result of collecting functional and non-functional requirements, industry best practices, and trends.",
      "description": "**Descriptions:**\nSUT related factors:\n• - Size and complexity of the SUT\n• - SUT Interfaces\n• - Third Party Software\n• - Levels of intrusion.\n• TAF related factors:\n• - Types of testing\n• - Teams involved\n• - Licensing cost of the tool\n• - Maintenance cost\n• - Training and Support\n• - Tool's Extensibility\n• - Tool's Performance & Stability.\n\n**Artifacts:**\nHigh-level test documentation that describes approach for Test Automation.",
      "category": "Expert Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 57,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4356,
      "title": "Investigate, communicate, compare, and customize Test Automation metrics for particular project needs.",
      "description": "**Descriptions:**\nTA Operational & TA Effectiveness metrics adjustment and customization in accordance with project needs.\n\n**Artifacts:**\nHigh-level test documentation that describes Test Automation metrics to be collected on the project.",
      "category": "Expert Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 58,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4357,
      "title": "Recognize factors that indicate expediency and inexpediency of Test Automation.",
      "description": "**Descriptions:**\nFrequency of TA usage.\n• Complexity of automation.\n• Compatibility of tool support.\n• Maturity of test process.\n• Suitability of automation for the stage of the software product lifecycle.\n• Sustainability of the automated environment Controllability of the SUT.\n\n**Artifacts:**\nHigh-level test documentation that describes expediency/inexpediency of Test Automation on the project.",
      "category": "Expert Test Automation Engineer",
      "module": "Automation Concept",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 59,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4358,
      "title": "Apply basic principles of maintainable automated solutions: scripts independency, scripts parametrization, component reusability.",
      "description": "**Descriptions:**\nScripts independency, scripts parameterization, component reusability.\n• Data separation from test scripts.\n\n**Artifacts:**\nAutomated tests written by associate.",
      "category": "Junior Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 60,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4359,
      "title": "Follow project defined code and design conventions.",
      "description": "**Descriptions:**\nDomain Specific Languages in Test Automation.\n\n**Artifacts:**\nProject defined code conventions, or any other documented source of code conventions used by associate.",
      "category": "Junior Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 61,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4360,
      "title": "Expand and perform refactoring of Test Automation framework components and modules.",
      "description": "**Descriptions:**\nGeneric test automation framework Tiers, Layers and Components.\n• Working with external data sources: CSV, JSON, XML, DB etc.\n\n**Artifacts:**\nTA framework components and modules that associate worked with.",
      "category": "Middle Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 62,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4361,
      "title": "Preserve usage conventions and utilize capabilities of existing project automated reporting solutions (build test reports of test execution).",
      "description": "**Descriptions:**\nMain logging concepts: loggers, appenders/targets/handlers, layouts/formats, log levels.\n\n**Artifacts:**\nTest reports generated by test runner built-in reporting capabilities.",
      "category": "Middle Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 63,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4362,
      "title": "Address scalability issues with appropriate implementation of out-of-the-box parallelization solutions.",
      "description": "**Descriptions:**\nAutomated tests parallelization approaches: by test suites/classes/methods. Typical blockers for tests parallelization.\n\n**Artifacts:**\nConfiguration for test runner built-in parallelization capabilities.",
      "category": "Senior Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 64,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4363,
      "title": "Implement Test Automation frameworks, their modules, supporting tools, and reusable components from scratch.",
      "description": "**Descriptions:**\nCommon structure of DDT, KDD, BDD Frameworks.\n\n**Artifacts:**\nTA framework designed by associate.",
      "category": "Senior Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 65,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4364,
      "title": "Utilize approaches for efficient automated results logging: logging customization in accordance with Automation needs.",
      "description": "**Descriptions:**\nCommon logging customization operations:\n• - Asynchronous logging\n• - Logging filtering\n• - Dynamic logging separation\n• - Logging levels customization.\n\n**Artifacts:**\nTest Automation framework that utilizes logging for any additional information (not just assertion messages).",
      "category": "Senior Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 66,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4365,
      "title": "Utilize approaches for efficient automated test results reporting.",
      "description": "**Descriptions:**\nEfficient automated reporting requirements:\n• - Readability\n• - Accessibility\n• - Interoperability\n• - Trend analysis\n• - Alerts and notifications.\n\n**Artifacts:**\n- Test reports generated by custom reporting solutions\n• - Integrations with test case management tools and/or issue-tracking systems are configured.",
      "category": "Senior Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 67,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4366,
      "title": "Address scalability issues with appropriate Test Automation ecosystem architecture definition and setup.",
      "description": "**Descriptions:**\nApproaches for horizontal scaling of Test Automation execution speed up.\n\n**Artifacts:**\nCustom test parallelization solutions/other approaches to handling scalability issues.",
      "category": "Lead Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 68,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4367,
      "title": "Perform technical comparison of Automation tools in order to select fit to purpose solution.",
      "description": "**Descriptions:**\nFactors that impact functional TA solutions evaluation:\n• Functional compliance with project requirements\n• Tool's Extensibility\n• Tool's Performance & Stability.\n\n**Artifacts:**\nAssociate can name what tools he/she did technical comparison for and what were pros/cons for these tools.",
      "category": "Lead Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 69,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4368,
      "title": "Proficiently drive implementation of multipurpose Test Automation frameworks, supporting tools, and reusable components.",
      "description": "**Descriptions:**\nKey characteristics of effective test automation framework:\n• - Improved test efficiency\n• - Lower maintenance costs\n• - Minimal manual intervention\n• - Maximum test coverage\n• - Reusability of code.\n\n**Artifacts:**\nTest Automation framework that is used for testing of more than one application, test layer (Integration, API+UI, etc) or build definition (Smoke, Regression, etc) for test execution. Or any other supporting tools developed to simplify testing.",
      "category": "Lead Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 70,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4369,
      "title": "Utilize principles that support easy development, evolution, and maintenance of the Test Automation architecture.",
      "description": "**Descriptions:**\nSingle responsibility. Extensibility. Replacement. Component Aggregation. Dependency Inversion.\n\n**Artifacts:**\nTest Automation Solution that follows principles from the list above.",
      "category": "Lead Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 71,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4370,
      "title": "Collect functional and non-functional requirements to Test Automation in order to provide a fit-for-purpose automation solution that is neither too costly, nor too scanty in functionality.",
      "description": "**Descriptions:**\nFunctional: Functional compliance with project requirements\n• Non-functional: Capacity,  Reliability,   Learnability, Operability, Performance, Compatibility.\n• TA Vision Methodology.",
      "category": "Expert Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 72,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4371,
      "title": "Focus on the scalability of the framework and supporting tools, leading to higher efficiency in activities related to enhancing framework functional footprint.",
      "description": "No detailed description available.",
      "category": "Expert Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 73,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4372,
      "title": "Use modularity to assist maintenance and ensure consistent performance in a scenario where the application under test is constantly evolving.",
      "description": "No detailed description available.",
      "category": "Expert Test Automation Engineer",
      "module": "C# TA Framework Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 74,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4373,
      "title": "Commit verified changes with comprehensive comments.",
      "description": "**Artifacts:**\nVersion control history.",
      "category": "Junior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 75,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4374,
      "title": "Execute basic CI build operations and assess results.",
      "description": "**Descriptions:**\nContinuous integration concept.\n• Continuous testing concept.\n\n**Artifacts:**\nExamples of builds associate works with.",
      "category": "Junior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 76,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4375,
      "title": "Perform basic operations against version control system (code checkout, checkin, and merge).",
      "description": "**Descriptions:**\nRepository, working copy, revisions.\n• Checkout and commit data into the repository.\n• Examining local changes, comparing working copy to repository.\n• Updating working copy, merging changes.\n• Updating to specific version.\n• Discarding changes.\n• Resolving conflicts in code.\n• Committing changes.\n• Creating and working with branch.\n• Merging branches.\n\n**Artifacts:**\nVersion control history.",
      "category": "Junior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 77,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4376,
      "title": "Split code commits according to an atomic chunk of functionality.",
      "description": "**Artifacts:**\nIndividual commits.",
      "category": "Junior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 78,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4377,
      "title": "Execute CI build scripts and adjust automated build configuration: add or adjust configuration parameters, set up build triggers, etc.",
      "description": "**Descriptions:**\nContinuous deployment concept.\n• Continuous delivery concept.\n• Continuous Integration and Deployment Pipeline.\n• Build execution process and common steps.\n• Build configuration parameters definition.\n• Passing environment variables, Plugins, integration with VCS systems.\n\n**Artifacts:**\nBuild configurations / jobs / pipelines that were modified by associate.",
      "category": "Middle Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 79,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4378,
      "title": "Follow defined version control strategies and workflows.",
      "description": "**Artifacts:**\nAssociate can describe project version control workflow.",
      "category": "Middle Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 80,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4379,
      "title": "Perform common version control operations: code checkout, checkin, merge, resolve conflicts, tagging, revert, operations with individual commits.",
      "description": "**Descriptions:**\nApplying patches.\n• Reverting changes.\n• Data recovery.\n• Tagging branches.\n• Using external editors and merge tools.\n• Checking out remote branches.\n\n**Artifacts:**\nVersion control history.",
      "category": "Middle Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 81,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4380,
      "title": "Create CI/CD build configurations and pipelines from scratch.",
      "description": "**Descriptions:**\nReusing job or artifact dependencies.\n• Build pipelines composition.\n• Artifacts collection.\n• Setting-up Unit Tests and Code Analysis\n• Setting-up Build Results Reporting and\n• Managing Build Artifacts.\n• Build Chains and Dependencies.\n\n**Artifacts:**\nBuild configurations / jobs / pipelines that were created by associate.",
      "category": "Senior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 82,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4381,
      "title": "Follow and enforce defined version control strategies and workflows.",
      "description": "**Descriptions:**\nDocumented version control branching strategy/workflow; PR rules, etc.",
      "category": "Senior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 83,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4382,
      "title": "Set up project version control from scratch, maintain and solve ongoing issues.",
      "description": "**Descriptions:**\nCreation of repository.\n• Configuring repository.\n• Applying repository hooks.\n• Handling file portability issues.\n• Configuring proxy connection.\n• Managing disk space.\n• Setting references on external repositories.\n• Using external editors and merge tools.\n\n**Artifacts:**\nProject configured in version control system.",
      "category": "Senior Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 84,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4383,
      "title": "Configure and support automated build infrastructure and environment for Test Automation activities.",
      "description": "**Descriptions:**\nDistributed CI systems.\n• Virtualization, Containerization and Clouds in CI.\n• Scaling CI Infrastructure.\n\n**Artifacts:**\nIncreased capacity of CI system (additional nodes or build agents configured); improved efficiency of CI infrastructure (nodes on-demand etc).",
      "category": "Lead Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 85,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4384,
      "title": "Drive integration of Test Automation with development processes and pipelines.",
      "description": "**Descriptions:**\nCI/CD  pipelines.\n• Unit tests execution.\n• Static code analysis and quality gates.\n\n**Artifacts:**\nAutomated tests that get executed within developers pipelines, configured as quality gate / build breaker.",
      "category": "Lead Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 86,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4385,
      "title": "Plan and drive CI infrastructure setup, update and transformation processes.",
      "description": "**Descriptions:**\nSet up and maintenance of CI systems\n• Configuration of plugins and extensions.\n• Configuration of access management.\n• Software Configuration Management Tools in CI Infrastructure.\n\n**Artifacts:**\nPlugins / extensions installations or any order configuration changes for CI systems  performed by associate.",
      "category": "Lead Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 87,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4386,
      "title": "Select version control branching strategies, workflows, and tools by investigation of project needs and drive implementation.",
      "description": "**Descriptions:**\nTroubleshooting through reference log.\n• Repository migration and replication.\n\n**Artifacts:**\nDocumented version control branching strategy/workflow; PR rules, etc.",
      "category": "Lead Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 88,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4387,
      "title": "Analyze and address scalability issues with appropriate selection of scaling solutions.",
      "description": "**Descriptions:**\nFactors to consider when selecting scaling solution:\n• Final Goal, Appropriate Metrics, Future Capacity, Operational Cost, Availability of technical skills to operate the system.\n\n**Artifacts:**\nScaling solutions are implemented (or proposals exist) for CI/CD system used on the project.",
      "category": "Expert Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 89,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4388,
      "title": "Analyze project requirements, compare pros and cons of tools and select appropriate to project needs, industry best practices, and trends.",
      "description": "**Descriptions:**\nCentralized vs Distributed VCS pros & cons.\n• Current VCS systems functional capabilities & integrations with build automation and third-party solutions.",
      "category": "Expert Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 90,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4389,
      "title": "Design fit-for-purpose CI solutions that are neither too costly, nor too scanty in functionality based on analysis of functional and non-functional requirements to Continuous Integration and Delivery processes.",
      "description": "**Descriptions:**\nFunctional: Functional compliance with project requirements\n• Non-functional: Capacity,  Reliability,   Lernability, Operability, Performance, Compatibility.\n\n**Artifacts:**\nBacklog of planned improvements for CI/CD system exists.",
      "category": "Expert Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 91,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4390,
      "title": "Design version control solutions and strategies for a complex product development.",
      "description": "**Descriptions:**\nMultiple VCS repositories management and integration.\n• VCS workflows selection and customization (Trunk Based Development, Release/Feature Branching Git Workflows).\n\n**Artifacts:**\nDocumented version control branching strategy/workflow for complex product development.",
      "category": "Expert Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 92,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4391,
      "title": "Utilize industry best practices of building distributed architecture and using cloud solutions for CI/CD processes.",
      "description": "**Descriptions:**\nCI/CD Best Practices.",
      "category": "Expert Test Automation Engineer",
      "module": "Software Configuration Manageme",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 93,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4392,
      "title": "Design simple layered Test Scripts with differentiation of Test Design and Business Logic.",
      "description": "**Descriptions:**\nTest script logic separation between framework layers:\n• Test generation\n• Test definition\n• Test execution\n• Test adaptation\n• Arrange/act/assert approach.\n\n**Artifacts:**\nTest scripts with clearly separated framework layers and steps.\n\n**NEBo Tasks:**\nDesign simple layered test scripts with differentiation of test design and business logic\n• 1. Use the provided codebase and testing platform to implement the basic TA framework.\n• 2. Automate ten test cases.\n• 3. Separate test design and business logic.\n• 4. Implement test script logic separation between framework layers:\n• Test generation\n• Test definition\n• Test execution\n• Test adaptation\n• 5. Arrange/act/assert approach.",
      "category": "Junior Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 94,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4393,
      "title": "Utilize fundamental OOP principles.",
      "description": "**Descriptions:**\nAbstraction, Encapsulation, Inheritance, Aggregation, Modularity, Polymorphism.\n\n**Artifacts:**\nTA Framework classes written or modified by associate that follow OOP principles.\n\n**NEBo Tasks:**\nUtilize fundamental OOP principles\n• 1. Use the provided codebase and testing platform to implement basic Test Automation patterns (Page Object).\n• 2. Follow OOP principles while writing TA framework classes.\n• 3. Implement Page Objects for the testing platform.\n• 4. Implement the Composite Page Object pattern.\n• 5. Implement the Page Factory pattern.\n• 6. Implement the Composite Page Element pattern.",
      "category": "Junior Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 95,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4394,
      "title": "Apply DRY, KISS, YAGNI, and Separation of Concerns principles during solutions design and implementation.",
      "description": "**Descriptions:**\nDRY, KISS, YAGNI and Separation of Concerns principles.\n\n**Artifacts:**\nCode base that follows the principles mentioned above.\n\n**NEBo Tasks:**\nApply DRY, KISS, YAGNI, and Separation of Concerns principles during solutions design and implementation.\n• Use provided codebase and testing platform for implementing basic Test Automation framework.\n• Code base should follow the principles:\n• DRY\n• KISS\n• YAGNI\n• Separation of Concerns\n• Provide samples where those principles can used.",
      "category": "Middle Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 96,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4395,
      "title": "Avoid usage of anti-patterns during solutions implementation.",
      "description": "**Descriptions:**\nSpaghetti code, God object, Big ball of mud, Magic strings, Magic numbers, Copy paste programming.\n\n**Artifacts:**\nCode base is not polluted with anti-patterns mentioned above.\n\n**NEBo Tasks:**\nAvoid usage of anti-patterns during solutions implementation.\n• Use provided codebase and testing platform for implementing basic Test Automation framework.\n• Provide samples of using anti-patterns and fixed code to avoid them.\n• Code should contain:\n• Spaghetti code\n• God object\n• Big ball of mud\n• Magic strings\n• Magic numbers\n• Copy-paste programming",
      "category": "Middle Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 97,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4396,
      "title": "Implements GoF Design Patterns.",
      "description": "**Descriptions:**\nDesign patterns: Creational (Abstract Factory, Builder, Factory Method, Prototype, Singleton).\n\n**Artifacts:**\nExamples of implemented patterns in code (refer to the list above).\n\n**NEBo Tasks:**\nImplements GoF Design Patterns.\n• Use provided codebase and testing platform for implementing basic Test Automation framework.\n• Provide samples of using design patterns. Code should contain:\n• Abstract Factory\n• Builder\n• Factory Method\n• Prototype\n• Singleton",
      "category": "Middle Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 98,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4397,
      "title": "Proficiently implement GoF Design Patterns.",
      "description": "**Descriptions:**\nDesign patterns: Structural (Adapter, Bridge, Composite, Decorator, Facade, Proxy), Behavioral (Chain Of Responsibility, Command, Mediator, Memento, Observer, Strategy, Template Method, Visitor).\n\n**Artifacts:**\nExamples of implemented patterns in code (refer to the list above).\n• KNOWLEDGE ITEMS\n\n**NEBo Tasks:**\nProficiently implement GoF Design Patterns.\n• Use provided codebase and testing platform for implementing basic Design patterns.\n• Implement Structural Design patterns:\n• Adapter\n• Bridge\n• Composite\n• Decorator\n• Facade\n• Proxy\n• Implement Behavioural Design patterns:\n• Chain Of Responsibility\n• Command\n• Mediator\n• Memento\n• Observer\n• Strategy\n• Template Method\n• Visitor",
      "category": "Senior Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 99,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4398,
      "title": "Apply during solution design and implementation: Solid Principles and Concurrency design patterns.",
      "description": "**Descriptions:**\nSolid Principles: Single Responsibility Principle, Open/Closed Principle, Liskov Substitution Principle, Interface Segregation Principle, Dependency Inversion.\n• Concurrency design patterns.\n\n**Artifacts:**\nCode base that follows next principles:\n• S-Separated and specialized classes, each one having a single reason to change;\n• O-Class inheritance with parent classes containing abstract methods (polymorphism in practice);\n• L-methods that accepts parent generalized classes in their signature;\n• I-classes don't depend on things that they don't require;\n• D-usage of interfaces where applicable instead of relying on a concrete implementation.\n\n**NEBo Tasks:**\nApply during solution design and implementation: Solid Principles and Concurrency design patterns.\n• Use provided codebase and testing platform for implementing Solid Principles and Concurrency design patterns.\n• Automate 10 Test Cases. Apply in codebase next principles:\n• S - Separated and specialized classes, each one having a single reason to change;\n• O - Class inheritance with parent classes containing abstract methods (polymorphism in practice);\n• L - methods that accepts parent generalized classes in their signature;\n• I - classes don't depend on things that they don't require;\n• D - usage of interfaces where applicable instead of relying on a concrete implementation.",
      "category": "Lead Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 100,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4399,
      "title": "Design solutions to effectively operate within particular application-under-test architecture: Layered Architecture, Event-Driven Architecture, Microkernel Architecture, Microservices Architecture.",
      "description": "**Descriptions:**\nLayered Architecture, Event-Driven Architecture, Microkernel architecture, Microservices architecture.\n\n**NEBo Tasks:**\nDesign solutions to effectively operate within a particular application-under-test architecture: Layered architecture, Event-Driven architecture, Microkernel architecture, Microservices architecture\n• 1. Use the provided codebase and testing platform to implement SOLID principles and concurrency design patterns.\n• 2. Automate ten test cases.\n• 3. Apply a Layered architecture to the framework.\n• 4. Implement an operational simulation framework using the following SUT architectures: Layered architecture, Event-Driven architecture, Microkernel architecture, and Microservices architecture.",
      "category": "Expert Test Automation Engineer",
      "module": "Object Oriented Design",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 101,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4400,
      "title": "Do refactoring in an ad hoc manner.",
      "description": "**Descriptions:**\nRefactoring Concept (what/when/why).\n\n**Artifacts:**\nExamples from code.",
      "category": "Junior Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 102,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4401,
      "title": "Take part in code review as reviewee.",
      "description": "**Descriptions:**\nCode review concept.\n\n**Artifacts:**\nPull request, merge request or any other type of changeset submitted for code review by associate.",
      "category": "Junior Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 103,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4402,
      "title": "Performs refactoring based on industry practices.",
      "description": "**Descriptions:**\nMoving Features Between Objects.\n• Organizing Data.\n• Composing Methods.\n• Simplifying Conditional Expressions.\n\n**Artifacts:**\nExamples from code where the following refactoring techniques were applied (refer to the list above).",
      "category": "Middle Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 104,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4403,
      "title": "Profficiently use code review tools (GitLab, Crucible, etc.)",
      "description": "**Descriptions:**\nTools that facilitate code review process.\n\n**Artifacts:**\nCode review tools are used on a regular basis.",
      "category": "Middle Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 105,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4404,
      "title": "Take part in code review as a reviewer.",
      "description": "**Descriptions:**\nTypes of code review processes.\n\n**Artifacts:**\nPull request, merge request or any other type of changeset where associate participated as a code reviewer.",
      "category": "Middle Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 106,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4405,
      "title": "Apply language specific semantics to achieve short and clean code. Do refactoring to remove code smells and reduce code complexity.",
      "description": "**Descriptions:**\nCreation (Replace Constructors with Creation Methods, Move Creation Knowledge to Factory, Encapsulate Classes with Factory, Encapsulate Composite with Builder).\n• Simplification (Replace Conditional Logic with Strategy, Replace Implicit Tree with Composite, Replace Conditional Dispatcher with Command).\n• Generalization (Extract Composite, Replace Hard-Coded Notifications with Observer, Red-green refactoring).\n\n**Artifacts:**\nExamples from code where the following refactoring techniques were applied (refer to the list above).",
      "category": "Senior Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 107,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4406,
      "title": "Define guidelines for the code review process, incorporate different practices to simplify and improve the process.",
      "description": "**Descriptions:**\nGated commits. Gated checkins.\n\n**Artifacts:**\nConfigured gated commits or checkins; branches restricted for merge without pull/merge request.\n• Written guidelines for code review process.",
      "category": "Senior Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 108,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4407,
      "title": "Use automated tools for code Quality Control (SonarQube, PMD, FindBugs, jsHint, FxCop, etc).",
      "description": "**Descriptions:**\nExperience and understanding of code quality measuring tools.\n\n**Artifacts:**\nAutomated tools that enforce code quality in TA solution are configured (or documented proposals for such tools exist).",
      "category": "Senior Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 109,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4408,
      "title": "Address any unidentified, unpredicted, or critical issues in codebase in timely manner.",
      "description": "**Artifacts:**\nExamples of such issues and escalation process.",
      "category": "Lead Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 110,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4409,
      "title": "Proficiently perform refactoring on module or system level.",
      "description": "**Descriptions:**\nRefactoring of large scale applications.\n\n**Artifacts:**\nExamples of refactoring on system or module level.",
      "category": "Lead Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 111,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4410,
      "title": "Provide and drive code debt elimination process.",
      "description": "**Descriptions:**\nTechnical Debt Management. Common causes of technical debt.\n\n**Artifacts:**\nBacklog of tasks for code debt elimination (refactoring, improvements, maintenance) of test automation framework exists. Approach for dedicating capacity for these tasks is defined.\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/SoftwareDevelopment/SitePages/Technical-Debt-Management.aspx",
      "category": "Lead Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 112,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4411,
      "title": "Set up and/or drive code review process from scratch. Actively participate in evolving of code review process, quality gates, and rules.",
      "description": "**Descriptions:**\nCode review best practices.\n\n**Artifacts:**\nConfigured gated commits or checkins; branches restricted for merge without pull/merge request.\n• Written guidelines for code review process.\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/SoftwareDevelopment/SitePages/Code-Review---2.0(1).aspx",
      "category": "Lead Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 113,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4412,
      "title": "Assess technical solutions from code quality perspective.",
      "description": "No detailed description available.",
      "category": "Expert Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 114,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4413,
      "title": "Plan and design refactoring on a module or system level.",
      "description": "**Descriptions:**\nRefactoring of large scale applications.",
      "category": "Expert Test Automation Engineer",
      "module": "Programming And Code Quality",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 115,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4414,
      "title": "Follow C# code conventions.",
      "description": "**Descriptions:**\nC# Coding Standards and Naming Conventions.\n\n**Artifacts:**\nCode follows C# Naming Guidelines:\n• Assemblies, Namespaces, Classes, Interfaces, Members and Parameters.\n• Code follows C# Coding Conventions:\n• Formatting - Indentation, line wrapping, braces, parentheses, blank spaces/lines, Letter case;\n• Comments - single/multiple line, inline, method/class descriptions.\n\n**NEBo Tasks:**\nFollow C# code conventions.\n• Setup IDE, debugger, code highlighting, setup default code style rules.\n• Use some existing C# file on a project to make refactoring and reformat code using code conventions.\n\n**Learning Resources:**\nhttps://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/coding-conventions",
      "category": "Junior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 116,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4415,
      "title": "Have basic experience of dependency management and project build lifecycle concepts. Perform project build and local setup.",
      "description": "**Descriptions:**\nNuGet Package Manager. Managing dependencies. Basic NuGet operations.\n\n**NEBo Tasks:**\nHave basic experience of dependency management and project build lifecycle concepts. Perform project build and local setup.\n• Build C# Project including all Dependencies Using VS Studio, Nuget packages or MS Build.\n• Add any Test runner(NUnit XUnit) as a dependency.",
      "category": "Junior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 117,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4416,
      "title": "Produce structured code, preserving project conventions and architecture.",
      "description": "**Descriptions:**\nConcept and purpose of Code Conventions.\n• Code smells - Bloaters: Long Method, Large Class, Primitive Obsession, Long Parameter List, Data Clumps.\n\n**Artifacts:**\nCode is not overloaded with Bloaters.\n\n**Learning Resources:**\nhttps://refactoring.guru/refactoring/smells",
      "category": "Junior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 118,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4417,
      "title": "Use core language capabilities to solve given tasks.",
      "description": "**Descriptions:**\nPrimitive Data Types and Variables.\n• Access Modifiers and Access Level.\n• Interface/Abstract class.\n• Namespaces.\n• Methods and Classes.\n• Operators\n• Conditional Statements.\n• Loops.\n• Data Structures - Lists, Arrays, Dictionary.\n• Exceptions Handling.\n• Enums.\n\n**Artifacts:**\nCode that utilizes the following language features (refer to the list above).\n\n**NEBo Tasks:**\nUse core language capabilities to solve given tasks.\n• Write a C# program to convert temperature from Fahrenheit to Celsius degree.\n• Take three numbers from the user and print the greatest number.\n• Write a C# program to iterate through all elements in an array list.",
      "category": "Junior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 119,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4418,
      "title": "Utilize C# platform to implement tasks.",
      "description": "**Descriptions:**\nNET Framework (details).\n\n**Artifacts:**\nCode that utilizes the following .Net Framework API:\n• Console Input Output,\n• Serialization & Deserialization,\n• Math operations,\n• Data Structures - Lists, Arrays, Dictionary,\n• File,\n• Date And Time API.\n\n**NEBo Tasks:**\nUtilize C# platform to implement tasks.\n• Write a C# program for  Serialize and Deserialize an object\n• Write a program in C# Sharp to separate odd and even integers in separate arrays.\n• Write a program in C# Sharp to print the name of month in full starting from current date.\n• Write a C# Sharp program to display the string representation of a date using all possible standard date and time formats in the computer's current culture (en-US.)\n• Write a C# Sharp program to determine whether a string ends with a particular substring",
      "category": "Junior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 120,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4419,
      "title": "Perform dependency management on a project.",
      "description": "**Descriptions:**\nCentral and private package repositories. Creating Nuget packages. Project Build Dependencies.\n\n**Artifacts:**\nProperly maintained packages.config file exists in the project. 3rd party libraries are added as dependencies.\n\n**NEBo Tasks:**\nPerform dependency management on a project.\n• Build C# Project including all Dependencies Using VS Studio, Nuget packages or MS Build.\n• Add custom build events\n• Create custom NuGet package\n• Create custom NuGet feed, publish and utilize any package\n• Utilize approaches to automatically update some 3rd party library that depends on some other essence. (ex. update driver based on browser version)",
      "category": "Middle Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 121,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4420,
      "title": "Perform project configuration management.",
      "description": "**Descriptions:**\nPurpose and content of app.config (*.config) file. Configuration Manager. Storing parameters and connection strings in *.config file. Assembly bindings.\n\n**Artifacts:**\nProperly maintained app.config file exists in the project and is used to store project-level parameters, connection strings, assembly bindings, etc.\n\n**NEBo Tasks:**\nPerform project configuration management.\n• Add setting and connection string to *.config file, read it properly at the place it needed.\n• Setup transformation of *.config file based on build configuration.\n• Setup assembly binding redirect.\n• Add custom configuration section.\n• Create separate *.config file for DB connection strings, bind original config with new file.",
      "category": "Middle Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 122,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4421,
      "title": "Produce well-structured code, preserve project conventions, architecture and appropriate decomposition into layers, tiers, and modules.",
      "description": "**Descriptions:**\nGood understanding of general and project-specific Code Conventions.\n• Code smells - Object-Orientation Abusers: Alternative Classes with Different Interfaces, Refused Bequest, Switch Statements, Temporary Field.\n\n**Artifacts:**\nCode is not overloaded with Object-Orientation Abusers.\n\n**Learning Resources:**\nhttps://refactoring.guru/refactoring/smells/oo-abusers",
      "category": "Middle Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 123,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4422,
      "title": "Use common languages capabilities to solve given tasks.",
      "description": "**Descriptions:**\nProperties\n• Object Equality and Identity (Hash code)\n• Static methods/classes\n• Partial classes & methods\n• Boxing & Unboxing\n• Out/ref keywords\n• Collections(Lists, Queues, Stacks, Sets and Dictionaries)\n• Streams and I/O.\n\n**Artifacts:**\nCode that utilizes the following language features (refer to the list above).\n\n**NEBo Tasks:**\nUse common languages capabilities to solve given tasks(C#)\n• Write a program in C# Sharp to create a nested structure to store two data for an employee in an array.\n• Split huge test scripts class into several partial classes.\n• Convert object type to char\n• Loop through the queue using a while loop, and add the next item to the total variable. After the loop, write the total to the console.",
      "category": "Middle Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 124,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4423,
      "title": "Utilize capabilities of C# third-party libraries to solve common problems and eliminate boilerplate code.",
      "description": "**Descriptions:**\nGeneral knowledge and awareness of C# third-party libraries and what problems do they solve:\n• Castle.Core, Newtown.JSON, Serilog, AutoMapper, Fluent Assertions, Shoudly, Log4Net, CsvHelper.\n\n**Artifacts:**\nExamples from code where C# third-party libraries are used to solve common problems.\n\n**NEBo Tasks:**\nUtilize capabilities of C# third-party libraries to solve common problems and eliminate boilerplate code.\n• Use static modifier for LogManager Object\n• Send Alerts for Exceptions\n• Make Own Custom log4net Appenders\n• Customize Your Layout in the Logs with log4net Pattern Layouts class\n• Use of Multiple log4net Log Levels and implement Filter by Them\n• Use the Diagnostic Contexts to Log Additional Fields",
      "category": "Middle Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 125,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4424,
      "title": "Implement additional steps to be executed during project build.",
      "description": "**Descriptions:**\nCustom build tasks. Pre- and post- Build events.\n\n**Artifacts:**\nCustom build tasks or pre- post- build events.\n\n**NEBo Tasks:**\nImplement additional steps to be executed during project build.\n• Implement Inline task\n• Implement Exec Task\n• Implement Custom Task",
      "category": "Senior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 126,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4425,
      "title": "Produce self-descriptive and well-structured code with sufficient amount of explicit documentation.",
      "description": "**Descriptions:**\nCode smells - Change Preventers: Divergent Change, Parallel Inheritance Hierarchies, Shotgun Surgery;\n• Dispensables: Comments, Data Class, Lazy Class, Duplicate Code, Dead Code, Speculative Generality.\n\n**Artifacts:**\nCode is not overloaded with Change Preventers and Dispensables.\n\n**Learning Resources:**\nhttps://refactoring.guru/refactoring/smells/change-preventers\n• https://refactoring.guru/refactoring/smells/dispensables",
      "category": "Senior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 127,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4426,
      "title": "Set up projects from scratch. Compare and select relevant tools/libraries to fulfill project needs.",
      "description": "**Descriptions:**\nProject templates. Project output types. Build configuration. Assembly info. Run vs Debug configuration. Difference between .Net Standard, .Net Core and .Net Framework.\n\n**Artifacts:**\nProject that was set up from scratch. Project structure, namespaces, build and dependency configuration, project configuration data, etc. follow general C# recommendations.\n\n**NEBo Tasks:**\nSet up projects from scratch. Compare and select relevant tools/libraries to fulfil project needs.\n• Set up project from scratch.\n• Implement Project structure, packages namespaces, build and dependency configuration, configuration data etc\n• Follow general C# recommendations.",
      "category": "Senior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 128,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4427,
      "title": "Write code which is efficient in terms of language performance, style conventions, and readability. Written code is easy to read and maintain by other people and embraces best practices.",
      "description": "**Descriptions:**\nGenerics.\n• Events and event handlers.\n• Delegates.\n• LINQ.\n• Extension methods.\n• Lambda expressions.\n• Anonymous/Tuple types.\n• Nullable Value Types.\n• Type Casting.\n• Regular expressions.\n\n**Artifacts:**\nCode that utilizes the following language features (refer to the list above).\n\n**NEBo Tasks:**\nWrite code which is efficient in terms of language performance, style conventions, and readability. Written code is easy to read and maintain by other people, embracing best practices.\n• Write a simple generic type, generic method\n• Write a program in C# Sharp to display numbers, multiplication of number with frequency and frequency of a number of giving array.\n• Declare a new type as a delegate that takes a single string parameter and returns a string result.\n• Write a C# program that will use regular expression. Use a back reference to write an expression that will match a person's name only if that person's first name and last name are the same.",
      "category": "Senior Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 129,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4428,
      "title": "Apply syntactic sugar constructions of the language. Naturally refactor and apply design as well as language-specific patterns.",
      "description": "**Descriptions:**\nReflections and metadata.\n• Asynchronous programming.\n• Multithreading/Tasks.\n• Custom Attributes.\n• Unsafe Code and Pointers.\n• Dynamic Language Runtime.\n• The Managed Heap and Garbage Collection.\n• Aspect-oriented programming.\n• Native and COM Interoperability.\n\n**Artifacts:**\nCode that utilizes the following language features (refer to the list above).\n\n**NEBo Tasks:**\nApply syntactic sugar constructions of the language. Naturally refactor and apply design as well as language-specific patterns(C#))\n• Write a C# Sharp program that will use following language features:\n• Type inference in C#.\n• Asynchronous programming\n• Reflections, Custom Attributes, Switch Expressions.\n• Multithreading\n• .Net Garbage Collection\n• Algorithms Aspect-oriented programming.",
      "category": "Lead Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 130,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4429,
      "title": "Design and implement efficient technical solutions beyond common approaches using language-specific features.",
      "description": "**Descriptions:**\nAlgorithms. Code complexity and associated metrics.\n\n**Artifacts:**\nHeavy customizations of existing testing tools, custom supporting tools and integrations implemented in a C#.\n\n**NEBo Tasks:**\nDesign and implement efficient technical solutions beyond common approaches using language-specific features(C#))\n• Setup Test Automation framework from scratch\n• Use one of the testing framework\n• Implemet test infrastructure pre-configuration: set up browser profiles, preferences, add-ons, cookies, certificates installation, etc.\n• Integrate third party libraruies\n• Use Design patterns",
      "category": "Lead Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 131,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4430,
      "title": "Produce self-descriptive, well-structured code, with sufficient amount of explicit documentation. Preserve testability and maintainability principles.",
      "description": "**Descriptions:**\nTestability and maintainability principles.\n• Code smells - Couplers: Feature Envy, Inappropriate Intimacy, Incomplete Library Class, Message Chains.\n\n**Artifacts:**\nCode is not overloaded with Couplers.\n\n**Learning Resources:**\nhttps://refactoring.guru/refactoring/smells/couplers",
      "category": "Lead Test Automation Engineer",
      "module": "C#",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 132,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4431,
      "title": "Automate and execute defined Test Scenarios within standard capabilities of Test Automation tools and existing framework.",
      "description": "**Descriptions:**\nMicrosoft UI Automation.\n• UI Elements and their properties.\n• Automation properties.\n• Property-Based access to controls.\n• Screenshot based interaction with UI.\n• Common tools and frameworks for interaction with Desktop applications (FlaUI, TestStack.White, WinAppDriver, Microsoft UI Automation, WinAPI).\n\n**Artifacts:**\nBasic automated test scenarios that exercise Desktop applications.",
      "category": "Junior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 133,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4432,
      "title": "Provide suggestions regarding Test Failure: environment related or real defects in system under test.",
      "description": "**Descriptions:**\nCommon causes of test failures:\n• environment-related\n• defect in system under test\n• automation script issue etc.\n• UI changes.\n\n**Artifacts:**\nAssociate can describe approach for analyzing test failures that is used on the project.",
      "category": "Junior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 134,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4433,
      "title": "Use desktop layout Inspector tools. Identify and implement platform and tool specific element locators.",
      "description": "**Descriptions:**\nUI control's automation properties.\n• Common Inspector tools (Spy UI, Visual UI Automation Verify, FlaUI Inspect).\n\n**Artifacts:**\nExamples of element locators in code (Accessibility ID, name, class name, Runtime ID, tag name, basic XPath selectors).",
      "category": "Junior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 135,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4434,
      "title": "Automate and execute defined Test Scenarios within standard capabilities of Test Automation tools and existing framework. Created automated tests are resistant to non-functional changes.",
      "description": "**Descriptions:**\nUI Test automation patterns: Page Object, Composite Page Object, Page Factory, Composite Page Element.\n• Desktop specific interactions with elements.\n• Lazy loading of elements.\n\n**Artifacts:**\nTest scenarios that follow these principles: no raw selectors in test methods, no test tool setup code in test methods, no exposed thread sleep code in test methods.\n• Examples of implemented patterns in code: Page Object, Composite Page Object, Page Factory, Composite Page Element.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 136,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4435,
      "title": "Design automated tests in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.",
      "description": "**Descriptions:**\nFactors that impact automated tests execution consistency:\n• Consistency of initial test state,\n• Intelligent wait strategies,\n• Tests independency and isolation,\n• Validations in test turnover points,\n• Post execution cleanup,\n• Test execution prioritization.\n\n**Artifacts:**\nTest scenarios that follow principles from the list above.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 137,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4436,
      "title": "Efficiently perform analysis of automated tests failures (environment-related, defect in system under test, automation script issue, etc).",
      "description": "**Descriptions:**\nCommon non-functional UI changes:\n• Layout changes\n• Styling changes\n• Element positioning changes.\n\n**Artifacts:**\nDocumented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered).",
      "category": "Middle Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 138,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4437,
      "title": "Use desktop layout Inspector tools. Identify and implement maintainable and reliable platform and tool specific element locators.",
      "description": "**Descriptions:**\nLocator implementation antipatterns:\n• Absolute locators\n• Usage of autogenerated attributes\n• Caption/Coordinates based locators.\n\n**Artifacts:**\nComplex Xpath locators that use axes, operators, functions, etc. Caption / Coordinates based locators.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 139,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4438,
      "title": "Automate Test Scenarios of any complexity, beyond standard tools and existing framework capabilities, including end-to-end Test Cases.",
      "description": "**Descriptions:**\nApplication life cycle control (reuse the application and configure restart mechanism: every time, restart on fail, etc.), System recourses isolation (registry settings consistency, etc.).\n\n**Artifacts:**\nTest scenarios that involve the following interactions: file upload, Application life cycle control (reuse the application and configure restart mechanism: every time, restart on fail, etc.),\n• image recognition tools, API layer, Database layer, registry settings etc.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 140,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4439,
      "title": "Find the most effective approaches for advanced application interactions implementation: drag and drop, mouse manipulations, functional keys simulation, etc.",
      "description": "**Descriptions:**\nImplementation of drag and drop, mouse manipulations, functional keys simulation etc.\n• UI control's automation patterns (dock, invoke, etc.)\n• UI control's automation events (hooks).\n\n**Artifacts:**\nAdvanced application interactions are implemented in test scenarios: drag and drop, mouse manipulations, functional keys simulation etc.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 141,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4440,
      "title": "Implement solutions for remote tests execution.",
      "description": "**Descriptions:**\nSolutions for remote test execution for Desktop automation.\n• OS level scripting.\n• Test retry on failure.\n\n**Artifacts:**\nRemote test execution setup is implemented.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 142,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4441,
      "title": "Practically implement solutions for capturing test artifacts: exception screenshots, test execution videos, etc.",
      "description": "**Descriptions:**\nCapabilities of automation framework for capturing test artifacts (screenshot/video on test failure, measure test execution time, application logs).\n• Integrations with bug-tracking systems.\n• Third party reporting frameworks.\n\n**Artifacts:**\nFramework that allows capturing the following artifacts: screenshot/video on test failure, test execution time, application logs etc.\n• Third party reporting frameworks that are configured on the project.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 143,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4442,
      "title": "Define the most effective Test Automation strategy based on comparison results in the context of particular Desktop UI implementation.",
      "description": "**Artifacts:**\nTest automation approach/strategy is documented (separate document; section of Test Strategy/Test Plan or presentation).",
      "category": "Lead Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 144,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4443,
      "title": "Implement solutions for automated test environment configuration and clean-up to simplify testing effort: system preferences, app installation, etc.",
      "description": "**Descriptions:**\nCake/PowerShell/bat scripts.\n• Programmatic start/stop of test tools. Programmatic start/stop of virtual machines. Programmatic app installation / uninstallation. Programmatic clean-up of test artifacts.\n\n**Artifacts:**\nTest Scenarios that programmatically automate the following operations:\n• start/stop of test tools (e.g. Appium Server)\n• start/stop of virtual machines\n• app installation/uninstallation\n• clean-up of test artifacts.",
      "category": "Lead Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 145,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4444,
      "title": "Design Desktop Test Automation solution visions based on a practical experience of Desktop Test Automation architecture components, their functions, relations, and integration.",
      "description": "**Descriptions:**\nTest Automation Vision and POC / Project Launch Support services and guidelines.\n\n**Artifacts:**\nParticipation in Test Automation Vision and POC / Project Launch Support services. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 146,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4445,
      "title": "Perform Desktop Test Automation solutions evaluation, identify bottlenecks, define and drive implementation of improvements.",
      "description": "**Descriptions:**\nHow to evaluate technology solutions. Factors to consider. Software Testing Process Assessment service and guidelines.\n\n**Artifacts:**\nParticipation in Software Testing Process Assessment service. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 147,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4446,
      "title": "Utilize best practices and industry standards of building distributed architecture for Desktop Automation.",
      "description": "**Descriptions:**\nBest practices and industry standards of building distributed architecture for Desktop Test Automation.\n\n**Artifacts:**\nExamples of Best Practices utilized on a project.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Desktop Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 148,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4447,
      "title": "Automate and execute defined Web UI Test Scenarios within standard capabilities of Test Automation tools and existing framework.",
      "description": "**Descriptions:**\nHTML, JavaScript and CSS purpose, and how they complement each other.\n• Common tools and frameworks for interaction with Web applications.\n\n**Artifacts:**\nBasic automated test scenarios that exercise Web UI application.\n\n**NEBo Tasks:**\nAutomate and execute defined Web UI Test Scenarios within standard capabilities of Test Automation tools and existing framework.\n• Use provided codebase and testing platform for creating and running test cases.\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: UI elements, Forms. Use Chrome Developer tools for detecting elements and defining locators",
      "category": "Junior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 149,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4448,
      "title": "Implement basic Test Automation patterns (Page Object).",
      "description": "**Descriptions:**\nWeb UI Test automation patterns: Page Object.\n\n**Artifacts:**\nExamples of implemented patterns in code (refer to the list above).\n\n**NEBo Tasks:**\nImplement basic Test Automation patterns (Page Object).\n• Use provided codebase and testing platform for implementing basic Test Automation patterns (Page Object).\n• Implement Page Objects for the testing platform.\n• Inherit Base Page for new Page Objects\n• Implement Builder or Page Factory pattern",
      "category": "Junior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 150,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4449,
      "title": "Provide suggestions regarding Test Failure: environment related or real defects in system under test.",
      "description": "**Descriptions:**\nCommon causes of test failures:\n• environment-related\n• defect in system under test\n• automation script issue, etc.\n\n**Artifacts:**\nAssociate can describe approach for analyzing test failures that is used on the project.\n\n**NEBo Tasks:**\nProvide suggestions regarding Test Failure: environment related or real defects in system under test.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: UI elements, Forms.\n• Run Test cases and analyze common causes of test failures: - environment-related - defect in system under test - automation script issue, etc.\n• Describe approach for analyzing test failures that you used on the project",
      "category": "Junior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 151,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4450,
      "title": "Use DOM Inspector tools. Identify and implement element locators.",
      "description": "**Descriptions:**\nDom Inspector Tools. Browser Dev Tools.\n• Tool specific locator types.\n\n**Artifacts:**\nExamples of element locators in code (id, name, class, linktext, basic CSS selectors, basic XPath selectors).\n\n**NEBo Tasks:**\nUse DOM Inspector tools. Identify and implement element locators.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will coveк following selectors:\n• id\n• name\n• class\n• linktext\n• basic CSS selectors\n• basic XPath selectors\n• Use Chrome Developer tools for detecting elements and defining locators",
      "category": "Junior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 152,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4451,
      "title": "Automate and execute defined Web UI Test Scenarios within standard capabilities of Test Automation tools and existing framework. Created automated tests are resistant to non-functional changes (e.g. UI layout, etc).",
      "description": "**Artifacts:**\nTest scenarios that follow these principles:\n• no raw selectors in test methods\n• no test tool setup code in test methods\n• no exposed thread sleep code in test methods.\n\n**NEBo Tasks:**\nAutomate and execute defined Web UI Test Scenarios within standard capabilities of Test Automation tools and existing framework. Created automated tests are resistant to non-functional changes (e.g. UI layout, etc).\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: UI elements, Forms.\n• Optimize codebase to follow these principles:\n• no raw selectors in test methods\n• no test tool setup code in test methods\n• no exposed thread sleep code in test methods.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 153,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4452,
      "title": "Design automated tests in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.",
      "description": "**Descriptions:**\nFactors that impact automated tests execution consistency:\n• Consistency of initial test state.\n• Intelligent wait strategies.\n• Tests independency and isolation.\n• Validations in test turnover points.\n• Post execution cleanup.\n• Test execution prioritization.\n• Test data consistency and isolation.\n• Test retry on failure.\n\n**Artifacts:**\nTest scenarios that follow principles from the list above.\n\n**NEBo Tasks:**\nDesign automated tests in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: UI elements, Forms.\n• Implement wait strategies(Implicit, Explicit, Fluent)\n• Develop test dependencies and isolation\n• Implement Validations in test turnover points\n• Implement Post execution cleanup\n• Implement Test execution prioritization.\n• Implement Test data consistency and isolation.\n• Implement Test retry on failure.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 154,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4453,
      "title": "Efficiently perform analysis of automated tests failures (environment-related, defect in system under test, automation script issue, etc).",
      "description": "**Descriptions:**\nCommon non-functional UI changes:\n• HTML Markup changes\n• Styling changes\n• Element positioning changes.\n\n**Artifacts:**\nDocumented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered).\n\n**NEBo Tasks:**\nEfficiently perform analysis of automated tests failures (environment-related, defect in system under test, automation script issue, etc).\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: UI elements, Forms.\n• Simulate testing platform instability\n• Try to find some bugs.\n• Prepare documented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered).",
      "category": "Middle Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 155,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4454,
      "title": "Proficiently implement core test automation patterns (Composite Page Object, Page Factory, Composite Page Element, etc) and DSL for test automation.",
      "description": "**Descriptions:**\nWeb UI Test automation patterns: Page Object, Composite Page Object, Page Factory, Composite Page Element.\n\n**Artifacts:**\nExamples of implemented patterns in code (refer to the list above).\n\n**NEBo Tasks:**\nProficiently implement core test automation patterns (Composite Page Object, Page Factory, Composite Page Element, etc) and DSL for test automation.\n• Use provided codebase and testing platform for implementing basic Test Automation patterns (Page Object).\n• Implement Page Objects for the testing platform.\n• Implement Composite Page Object pattern\n• Implement Page Factory pattern\n• Implement Composite Page Element pattern",
      "category": "Middle Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 156,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4455,
      "title": "Use DOM Inspector tools. Identify and implement maintainable and reliable tool specific element locators.",
      "description": "**Descriptions:**\nCapabilities of CSS selectors(selecting nodes, predicates, functions).\n• Capabilities of XPath selectors(selecting nodes, attribute values, predicates, axes, operators, functions)\n• Locator implementation antipatterns:\n• Absolute locators\n• Usage of autogenerated attributes\n• Caption/Coordinates based locators.\n\n**Artifacts:**\nComplex CSS or XPath locators that use axes, operators, functions, etc. Caption/Coordinates based locators.\n\n**NEBo Tasks:**\nUse DOM Inspector tools. Identify and implement maintainable and reliable tool specific element locators.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover Complex CSS or XPath locators that use:\n• axes\n• operators\n• functions\n• Caption/Coordinates based locators.\n• Use Chrome Developer tools for detecting elements and defining locators",
      "category": "Middle Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 157,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4456,
      "title": "Analyse benefits and drawbacks of headless test execution in context of particular project. Implement headless test execution solutions based on analysis results.",
      "description": "**Descriptions:**\nHeadless test execution proc & cons.\n\n**Artifacts:**\nHeadless browsers test execution is configured on the project (or strong arguments against it exist).",
      "category": "Senior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 158,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4457,
      "title": "Automate Test Scenarios of any complexity, beyond standard tools and existing framework capabilities, including end-to-end Test Cases.",
      "description": "**Descriptions:**\nConcept of Web UI end-to-end testing. Its pros and cons.\n• File upload, interaction with desktop environment, image recognition tools\n• Parallel and Distributed test execution.\n\n**Artifacts:**\nTest scenarios that involve the following interactions: file upload, desktop environment, image recognition tools, API layer, Database layer.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 159,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4458,
      "title": "Find the most effective approaches for advanced browser interactions implementation: drag and drop, mouse manipulations, functional keys simulation, etc.",
      "description": "**Descriptions:**\nImplementation of drag and drop, mouse manipulations, functional keys simulation etc.\n\n**Artifacts:**\nAdvanced browser interactions are implemented in test scenarios: drag and drop, mouse manipulations, functional keys simulation etc.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 160,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4459,
      "title": "Implement solutions for capturing test artifacts: exception screenshots, test execution videos, etc.",
      "description": "**Descriptions:**\nCapabilities of automation framework for capturing test artifacts (screenshot/video on test failure, measure test execution time, browser logs)\n• Third party reporting frameworks.\n\n**Artifacts:**\nFramework that allows capturing the following artifacts: screenshot/video on test failure, test execution time, browser logs etc.\n• Third party reporting frameworks are configured on the project.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 161,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4460,
      "title": "Implement test infrastructure pre-configuration to simplify testing effort: set up browser profiles, preferences, add-ons, cookies, certificates installation, etc.",
      "description": "**Descriptions:**\nSet-up browser profiles, preferences, add-ons, cookies, install certificates etc.\n\n**Artifacts:**\nTest scenarios that perform test infrastructure pre-configuration: set up browser profiles, preferences, add-ons, cookies, certificates installation, etc.",
      "category": "Senior Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 162,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4461,
      "title": "Define the most effective Test Automation strategy based on comparison results in the context of particular Web UI implementation.",
      "description": "**Artifacts:**\nTest automation approach/strategy is documented (separate document; section of Test Strategy/Test Plan or presentation).",
      "category": "Lead Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 163,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4462,
      "title": "Implement distributed execution solutions (including cloud) for Web UI Test Automation.",
      "description": "**Descriptions:**\nAutomated tests distributed execution solutions (Selenium Grid, Selenoid etc).",
      "category": "Lead Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 164,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4463,
      "title": "Design Web UI Test Automation solution visions based on a practical experience of Web UI Test Automation architecture components, their functions, relations, and integration.",
      "description": "**Descriptions:**\nTest Automation Vision and POC / Project Launch Support services and guidelines.\n\n**Artifacts:**\nParticipation in Test Automation Vision and POC / Project Launch Support services. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 165,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4464,
      "title": "Perform Web UI Test Automation solutions evaluation, identify bottlenecks, define and drive implementation of improvements.",
      "description": "**Descriptions:**\nHow to evaluate technology solutions. Factors to consider. Software Testing Process Assessment service and guidelines.\n\n**Artifacts:**\nParticipation in Software Testing Process Assessment service. Corresponding deliverables produced.\n\n**Learning Resources:**\nhttps://www.forbes.com/sites/forbestechcouncil/2017/02/09/12-factors-to-help-you-evaluate-potential-technical-solutions/#5e3adf094f66",
      "category": "Expert Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 166,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4465,
      "title": "Utilize best practices and industry standards of building distributed architecture for Web UI automation.",
      "description": "**Descriptions:**\nBest practices and industry standards of building distributed architecture for Web UI Test Automation.\n\n**Artifacts:**\nExamples of Best Practices utilized on a project.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Web UI Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 167,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4466,
      "title": "Automate and execute defined Test Scenarios within standard capabilities of Test Automation tools and existing framework.",
      "description": "**Descriptions:**\nClient-server architecture.\n• XML & JSON.\n\n**Artifacts:**\nBasic automated test scenarios that exercise API\n\n**NEBo Tasks:**\nAutomate and execute defined Test Scenarios within standard capabilities of Test Automation tools and existing framework.\n• Use provided codebase and testing platform for creating and running test scenarios\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 test scenarios that will cover: different http request types, inline/body parameters, headers.\n• Use Chrome Developer tools capabilities for tracing network activities.",
      "category": "Junior Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 168,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4467,
      "title": "Provide suggestions regarding Test Failure: environment related or real defects in system under test.",
      "description": "**Descriptions:**\nCommon causes of test failures: environment-related defect in system under test automation script issue etc.\n\n**Artifacts:**\nARTIFACTS Associate can describe approach for analyzing test failures that is used on the project.\n\n**NEBo Tasks:**\n[C#] Provide suggestions regarding Test Failure: environment related or real defects in system under test.\n• Use provided codebase and testing platform for creating and running test scenarios\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 test scenarios that will cover: different http request types, inline/body parameters, headers.\n• Run Test cases and analyze common causes of test failures: - environment-related - defect in system under test - automation script issue, etc.\n• Describe approach for analyzing test failures that you used on the project.",
      "category": "Junior Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 169,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4468,
      "title": "Use standalone request execution and monitoring tools (Postman, Fiddler, SoapUI, etc).",
      "description": "**Descriptions:**\nCommon causes of test failures: environment-related defect in system under test automation script issue etc.\n\n**Artifacts:**\nAssociate can describe approach for analyzing test failures that is used on the project.\n\n**NEBo Tasks:**\nUse standalone request execution and monitoring tools (Postman, Fiddler, SoapUI, etc).\n• Use provided codebase and testing platform for creating and running test scenarios\n• Setup web api testing tool.\n• Create user, generate token through capabilities of testing platform, setup applicable authorization in testing tool.\n• Generate a collection of at least 10 test scenarios based on provided functionality of the testing platform. (that will cover: different http request types, inline/body parameters, headers.)\n• Utilize monitoring capabilities of testing tool to set up scheduled runs for created collection of scenarios.",
      "category": "Junior Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 170,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4469,
      "title": "Automate and execute defined Test Scenarios within standard capabilities of Test Automation tools and existing framework. Created automated tests are resistant to non-functional changes.",
      "description": "**Descriptions:**\nHTTP protocol components:\n• – Request / Response\n• – Methods\n• – Status Codes\n• – Headers\n• Understands REST architectural style main components and principles.\n\n**Artifacts:**\nTest scenarios that follow these principles:\n• - no request building code in test methods\n• - no test tool setup code in test methods\n• - no exposed thread sleep code in test methods.\n\n**NEBo Tasks:**\nAutomate and execute defined Test Scenarios within standard capabilities of Test Automation tools and existing framework. Created automated tests are resistant to non-functional changes.\n• Use provided codebase and testing platform for creating and running test scenarios\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 test scenarios that will cover: different http request types, inline/body parameters, headers.\n• Utilize http client build in timeout capabilities to handle (connection, socket, etc) to handle common wait related issues while execution.\n• Utilize platform/third party libraries capabilities to serialize/deserialize data objects.",
      "category": "Middle Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 171,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4470,
      "title": "Design automated tests in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.",
      "description": "**Descriptions:**\nFactors that impact automated tests execution consistency:\n• Consistency of initial test state.\n• Intelligent wait strategies.\n• Tests independency and isolation.\n• Validations in test turnover points.\n• Post execution cleanup.\n• Test execution prioritization.\n• Test data consistency and isolation.\n• Test retry on failure.\n\n**Artifacts:**\nTest scenarios that follow principles from the list above.\n\n**NEBo Tasks:**\n[C#] Design automated tests in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.\n• Use provided codebase and testing platform for creating and running test scenarios\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 test scenarios that will cover: different http request types, inline/body parameters, headers.\n• Utilize asynchronous coding practices/unit test framework capabilities.\n• Implement Validations in test turnover points\n• Implement Post execution cleanup\n• Implement Test execution prioritization.\n• Implement Test data consistency and isolation.\n• Incorporate data models from SUT to be reused in automated tests.",
      "category": "Middle Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:28",
      "updated_at": "2025-08-01 17:06:28",
      "order_index": 172,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4471,
      "title": "Efficiently perform analysis of automated tests failures (environment-related, defect in system under test, automation script issue, etc).",
      "description": "**Descriptions:**\nCommon causes of test failures:\n• environment-related\n• defect in system under test\n• automation script issue etc.\n\n**Artifacts:**\nDocumented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered)\n\n**NEBo Tasks:**\n[C#] Efficiently perform analysis of automated tests failures (environment-related, defect in system under test, automation script issue, etc).\n• Setup/Improve approach of Test Result Analysis to be able continuously decrease time required to log all major SUT related defects detected (classification, prioritization, relation to a single change, etc)\n• Perform more complex investigation of SUT related defects to combine meaningful bug reports, with additional related artifacts (server logs, repository commits, functional requirements, etc)\n• Prepare documented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered).",
      "category": "Middle Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 173,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4472,
      "title": "Use solutions built on top of language-specific libraries for serialization/deserialization/modification of web-services requests/responses.",
      "description": "**Descriptions:**\nLanguage-specific libraries for serialization/deserialization/modification of web-services requests/responses\n\n**Artifacts:**\nUsage of built-int solutions for serialization, deserialization and modification of web-services requests and responses implemented in TA Framework\n\n**NEBo Tasks:**\nUse solutions built on top of language-specific libraries for serialization/deserialization/modification of web-services requests/responses.\n• Extend TA Framework with correspondent library.\n• Implement polymorphic serialization and deserialization.",
      "category": "Middle Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 174,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4473,
      "title": "Automate Test Scenarios of any complexity, beyond standard tools and existing framework capabilities, including end-to-end Test Cases.",
      "description": "**Descriptions:**\nContract validation tests vs Functional Tests.\n• Understands SOAP protocol main components and principles.\n• Web services contracts validation where appropriate (JSONSchema, Pact).\n\n**Artifacts:**\nTest scenarios that involve the following interactions: interactions with Database, interactions with level components (queueing system, events system etc).\n• Contract validation tests.\n\n**NEBo Tasks:**\nAutomate Test Scenarios of any complexity, beyond standard tools and existing framework capabilities, including end-to-end Test Cases.\n• Automate at least 10 complex end-to-end test scenarios that will cover:\n• Complex interactions with Databases.\n• Triggering SUT/Infrastructure internal events.\n• Handling integration with external services.\n• Contract validation.\n• Implementation of complex test data preparation scenarios (external dependencies, complex multi-step mutually dependent flows).\n• Handling of dynamic query language based API`s (GraphQL, SOAP, etc)",
      "category": "Senior Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 175,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4474,
      "title": "Design solutions for API clients authentication and authorization on transport and application levels.",
      "description": "**Descriptions:**\nWeb service security. Common security standards: Basic authentication, Oauth, JWT, SAML.\n\n**Artifacts:**\nSolutions for API clients authentication and authorization on transport and application levels implemented in TA Framework.\n\n**NEBo Tasks:**\nDesign solutions for API clients authentication and authorization on transport and application levels.\n• Design polymorphic authentication/authorization solution that will provide simultaneous support of most common auth methods:\n• Basic/Bearer\n• API Keys\n• OAuth2",
      "category": "Senior Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 176,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4475,
      "title": "Implement API clients and related Test Automation components.",
      "description": "**Descriptions:**\nTools and frameworks that simplify WEB services clients implementation and testing. Web service clients code generation from schema where possible (WSDL, WADL, Open API Specification files, Swagger Codegen etc)\n\n**Artifacts:**\nAPI clients implemented in TA Framework.\n\n**NEBo Tasks:**\nImplement API clients and related Test Automation components.\n• Select fit for purpose tools/approach depending on project context/experience.\n• Implement API client from scratch\n• Automate at least 10 Test scenarios adjusting the solution\n• Introduce/Utilize supportive tools to improve testing process effectiveness.",
      "category": "Senior Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 177,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4476,
      "title": "Analyze requirements and set up infrastructure for virtualization of API Test Automation.",
      "description": "**Artifacts:**\nSolutions for automated setup and virtualization (Docker based for microservices/VM based for monolith backend architecture etc) of application-under-test used for API Test Automation are implemented.\n\n**NEBo Tasks:**\nAnalyze requirements and set up infrastructure for virtualization of API Test Automation.\n• Implement solutions for automated setup and virtualization of:\n• Application-under-test, system dependencies.\n• Test infrastructure (test agents with required configuration/capabilities out of the box)",
      "category": "Lead Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 178,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4477,
      "title": "Define the most effective Test Automation strategy based on comparison results in the context of particular API implementation.",
      "description": "**Descriptions:**\nConcept of asynchronous web services, knows how to effectively automate interactions with them.\n• Message Oriented Architecture and test automation best practices of such systems.\n\n**Artifacts:**\nTest automation approach/strategy is documented (separate document; section of Test Strategy/Test Plan or presentation).\n\n**NEBo Tasks:**\nDefine the most effective Test Automation strategy based on comparison results in the context of particular API implementation.\n• Use provided testing platform and prepare:\n• Test automation approach/strategy (separate document; section of Test Strategy/Test Plan or presentation).\n• Use provided templates in QMO Confluence space",
      "category": "Lead Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 179,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4478,
      "title": "Implement or extend tools for serialization/deserialization/modification of API requests/responses.",
      "description": "**Descriptions:**\nLanguage-specific libraries for serialization/deserialization/modification of web-services requests/responses.\n\n**Artifacts:**\nCustom solutions for serialization, deserialization and modification of API requests and responses implemented in TA Framework.\n\n**NEBo Tasks:**\nImplement or extend tools for serialization/deserialization/modification of API requests/responses.\n• Implement custom solutions for serialization, deserialization and modification of API requests and responses.",
      "category": "Lead Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 180,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4479,
      "title": "Design API Test Automation solution visions based on a practical experience of API Test Automation architecture components, their functions, relations, and integration.",
      "description": "**Descriptions:**\nTest Automation Vision and POC / Project Launch Support services and guidelines.\n\n**Artifacts:**\nParticipation in Test Automation Vision and POC / Project Launch Support services. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 181,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4480,
      "title": "Perform API Test Automation solutions evaluation, identify bottlenecks, define and drive implementation of improvements.",
      "description": "**Descriptions:**\nHow to evaluate technology solutions. Factors to consider. Software Testing Process Assessment service and guidelines.\n\n**Artifacts:**\nParticipation in Software Testing Process Assessment service. Corresponding deliverables produced.\n\n**Learning Resources:**\nhttps://www.forbes.com/sites/forbestechcouncil/2017/02/09/12-factors-to-help-you-evaluate-potential-technical-solutions/#5e3adf094f66",
      "category": "Expert Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 182,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4481,
      "title": "Utilize best practices and industry standards of building distributed architecture for API Test Automation.",
      "description": "**Descriptions:**\nBest practices and industry standards of building distributed architecture for API Test Automation.\n\n**Artifacts:**\nExamples of Best Practices utilized on a project.",
      "category": "Expert Test Automation Engineer",
      "module": "C# API Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 183,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4482,
      "title": "Automate and execute defined test scenarios within standard capabilities of test automation tools and existing framework.",
      "description": "**Descriptions:**\nMobile session and capabilities. UI Layout and interaction with elements.\n• Common tools and frameworks for interaction with Mobile applications.\n\n**Artifacts:**\nBasic automated test scenarios that exercise mobile applications.\n\n**NEBo Tasks:**\nAutomate and execute test scenarios for Mobile Application within standard capabilities of test automation tools and existing framework.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: layouts, views, properties.\n• Use Appium inspector or UIAutomator for detecting elements and defining locators.",
      "category": "Junior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 184,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4483,
      "title": "Perform mobile device emulators setup and application deployment.",
      "description": "**Descriptions:**\nReal devices and mobile emulators.\n\n**Artifacts:**\nMobile device emulators that are configured and ready to be used for running automated tests.\n\n**NEBo Tasks:**\nPerform mobile device emulators setup and application deployment.\n• Use instructions provided in codebase\n• Setup android studio and deploy demo app provided in codebase\n• Setup Xcode and deploy demo app provided in codebase",
      "category": "Junior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 185,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4484,
      "title": "Provide suggestions regarding test failure: environment related or real defects in system under test.",
      "description": "**Descriptions:**\nCommon causes of test failures:\n• environment-related\n• defect in system under test\n• automation script issue etc.\n\n**Artifacts:**\nAssociate can describe approach for analyzing test failures that is used on the project.\n\n**NEBo Tasks:**\nProvide suggestions regarding test failure for mobile automation: environment related or real defects in system under test.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: layouts, views, properties.\n• Run Test cases and analyze common causes of test failures: - environment-related - defect in system under test - automation script issue, etc.\n• Describe approach for analyzing test failures that you used on the project",
      "category": "Junior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 186,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4485,
      "title": "Use mobile layout Inspector tools. Identify and implement platform and tool specific element locators.",
      "description": "**Descriptions:**\nLayout Inspector tools. Mobile UI Accessibility. Element locators.\n\n**Artifacts:**\nExamples of element locators in code (Accessibility ID, name, class name, ID, IOS UIAutomation ID, basic XPath selectors.\n\n**NEBo Tasks:**\nUse mobile layout Inspector tools. Identify and implement platform and tool specific element locators.\n• Use inspector tools or for detecting elements and defining locators by:\n• Accessibility ID\n• Text Inside\n• XPath\n• Coordinate\n• Automate at least 10 Test Cases that will cover different locators types.",
      "category": "Junior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 187,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4486,
      "title": "Automate and execute defined test scenarios within standard capabilities of test automation tools and existing framework. Created automated tests are resistant to non-functional changes.",
      "description": "**Descriptions:**\nUI Test automation patterns: Page Object, Composite Page Object, Page Factory, Composite Page Element\n• Mobile specific interactions with elements.\n\n**Artifacts:**\nTest scenarios that follow these principles: no raw selectors in test methods, no test tool setup code in test methods, no exposed thread sleep code in test methods.\n• Examples of implemented patterns in code: Page Object, Composite Page Object, Page Factory, Composite Page Element.\n\n**NEBo Tasks:**\nAutomate and execute defined test scenarios for mobile platform within standard capabilities of test automation tools and existing framework. Created automated tests are resistant to non-functional changes.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: layouts, views, properties.\n• Optimize codebase to follow these principles:\n• no raw selectors in test methods\n• no test tool setup code in test methods\n• no exposed thread sleep code in test methods.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 188,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4487,
      "title": "Design automated tests in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.",
      "description": "**Descriptions:**\nFactors that impact automated tests execution consistency:\n• Consistency of initial test state.\n• Intelligent wait strategies.\n• Tests independency and isolation.\n• Validations in test turnover points.\n• Post execution cleanup.\n• Test execution prioritization.\n• Test data consistency and isolation.\n• Test retry on failure.\n\n**Artifacts:**\nTest scenarios that follow principles from the list above.\n\n**NEBo Tasks:**\nDesign automated tests for mobile platform in a way to produce consistent results, independently of current state of system under test, test environmental issues, etc.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover: layouts, views, properties.\n• Develop test dependencies and isolation",
      "category": "Middle Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 189,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4488,
      "title": "Efficiently perform analysis of automated tests failures (environment-related, defect in system under test, automation script issue, etc).",
      "description": "**Descriptions:**\nCommon non-functional UI changes:\n• – Layout changes\n• – Styling changes\n• – Element positioning changes\n\n**Artifacts:**\nDocumented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered).\n\n**NEBo Tasks:**\nEfficiently perform analysis of mobile automated tests failures (environment-related, defect in system under test, automation script issue, etc).\n• Setup/Improve approach of Test Result Analysis to be able continuously decrease time required to log all major SUT related defects detected (classification, prioritization, relation to a single change, etc)\n• Perform more complex investigation of SUT related defects to combine meaningful bug reports, with additional related artifacts (server logs, repository commits, functional requirements, etc)\n• Prepare documented evidence of test results analysis for frequently executed jobs exists (emails, spreadsheets, automated tools that store analysis outcomes, bugs entered).\n• Utilize machine learning reporting solutions, to make test results analysis time effective in terms of identification of SUT-related issues, as well as overall efforts spent on this activity.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 190,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4489,
      "title": "Perform physical mobile devices setup and application deployment.",
      "description": "**Descriptions:**\nPros and cons of using physical devices vs emulators. ADB, AVD (Android) Xcode device management and Simulator.\n\n**Artifacts:**\nPhysical mobile devices that are configured and ready to be used for running automated tests.\n\n**NEBo Tasks:**\nPerform physical mobile devices setup and application deployment.\n• Analyze requirements, determine the need of using a physical device instead of virtual one.\n• Configure tests for physical iOS/Android devices.\n• Configure tests for cloud-hosted platform real device.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 191,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4490,
      "title": "Use mobile layout Inspector tools. Identify and implement maintainable and reliable platform and tool specific element locators.",
      "description": "**Descriptions:**\nLocator implementation antipatterns:\n• Absolute locators\n• Usage of autogenerated attributes\n• Caption / Coordinates based locators.\n\n**Artifacts:**\nComplex Xpath locators that use axes, operators, functions etc.\n• Coordinates based locators.\n\n**NEBo Tasks:**\nUse mobile layout Inspector tools. Identify and implement maintainable and reliable platform and tool specific element locators.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test Cases that will cover Complex XPath locators that use:\n• axes\n• operators\n• functions\n• Caption/Coordinates based locators.\n• Utilize advanced selector strategies provided by the test automation tool such as:\n• Android UIAutomator\n• Image\n• IOS UIAutomation\n• Use Appium inspector or UIAutomator for detecting elements and defining locators.",
      "category": "Middle Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 192,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4491,
      "title": "Automate Test Scenarios of any complexity, beyond standard tools and existing framework capabilities, including end-to-end Test Cases.",
      "description": "**Descriptions:**\nNative apps, Mobile web apps, Hybrid apps. Difference and commonalities in regards to automated testing.\n• Application life cycle control (reuse the application and configure restart mechanism: every time, restart on fail, etc.).\n• Navigation between activities (Android only).\n\n**Artifacts:**\nTest scenarios that involve the following interactions with application: API layer, Database layer, application life cycle control (reuse the application and configure restart mechanism: every time, restart on fail, etc.), navigation between activities (Android only).\n\n**NEBo Tasks:**\nAutomate Test Scenarios for Mobile with any complexity beyond standard tools and existing framework capabilities, including end-to-end test cases.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• https://mstfs.softserveinc.com/tfs/QMO/test_automation_frameworks/_git/CSharp\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test scenarios that involve the following interactions:\n• Touch actions (swipe, tap, press, multi-touch)\n• Advanced authentication (fingerprint/face id)\n• OS interactions (system bar, notifications)\n• Pushing/Pulling files\n• Navigation between activities.\n• Backend interactions (API, Database layers)\n• Configure restart mechanism: (every time, restart on fail, etc.)",
      "category": "Senior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 193,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4492,
      "title": "Implement solutions for capturing test artifacts: exception screenshots, test execution videos, etc.",
      "description": "**Descriptions:**\nMobile devices logging and how to find it. Capabilities of automation framework for capturing test artifacts (screenshot/video on test failure, video of the failed test, measure test execution times)\n• Integrations with bug-tracking systems.\n• Third party reporting frameworks.\n\n**Artifacts:**\nFramework that allows capturing the following artifacts: screenshot/video on test failure, test execution time, device logs etc.\n• Third party reporting frameworks are configured on the project.\n\n**NEBo Tasks:**\nImplement solutions for capturing test artifacts in mobile framework: exception screenshots, test execution videos, etc.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test scenarios\n• Implement screenshot/video on test failure\n• Show execution time, browser logs\n• Customize Allure reports",
      "category": "Senior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 194,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4493,
      "title": "Implement test infrastructure pre-configuration to simplify Mobile Testing effort.",
      "description": "**Descriptions:**\nInteractions with device. Mocking location and orientation. Interactions with:\n• files\n• clipboard\n• network\n• application state\n• device settings.\n• Physical device setup (iOS - apple developer account, provisioning profiles, certificates etc).\n\n**Artifacts:**\nTest scenarios that involve the following interactions with device: mocking location and orientation, files, clipboard, network, device setting, any other device pre-configuration before test execution.\n\n**NEBo Tasks:**\nImplement test infrastructure pre-configuration to simplify Mobile Testing effort.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test scenarios that involve the following interactions:\n• Location and orientation mocking\n• Pushing/Pulling files\n• Clipboard interactions\n• Changing of device settings\n• Network interactions (wifi, data, location, sms, GSM call)",
      "category": "Senior Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 195,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4494,
      "title": "Define the most effective Test Automation strategy based on comparison results in the context of particular Mobile UI implementation.",
      "description": "**Descriptions:**\nBlack-box vs grey-box tools for automated mobile testing.\n\n**Artifacts:**\nTest automation approach/strategy is documented (separate document; section of Test Strategy/Test Plan or presentation).\n\n**NEBo Tasks:**\nDefine the most effective Test Automation strategy based on comparison results in the context of particular Mobile UI implementation.\n• Use provided testing platform and prepare:\n• Test automation approach/strategy (separate document; section of Test Strategy/Test Plan or presentation).\n• Use provided templates in QMO Confluence space",
      "category": "Lead Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 196,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4495,
      "title": "Design and implement solutions for crossplatform and crossversion for Mobile UI Test Automation.",
      "description": "**Descriptions:**\nTools that support cross-platform automated testing. Strategies for implementing platform specific selectors/code/tests.\n\n**Artifacts:**\nTest scenarios, PageObjects and other supporting utils that are compatible with several platforms simultaneously (e.g. both Android and iOS).\n\n**NEBo Tasks:**\nDesign and implement solutions for crossplatform and crossversion for Mobile UI Test Automation.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Analyze application design on different platforms. Come up with fit-to-purpose test automation tools, solution design approaches.\n• Cover applicable application functionality with cross platform test scenarios.\n• Extend provided codebase functionality with ability to have separate pages for different platforms/versions ( strategy, screen object patterns)\n• Extend provided codebase functionality with ability to have single page for different platforms/versions (element abstractions)",
      "category": "Lead Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 197,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4496,
      "title": "Implement distributed solutions (including cloud) for Mobile UI Test Automation.",
      "description": "**Descriptions:**\nClient/Server Architecture of Mobile UI test automation. Parallel test execution and debugging.\n\n**Artifacts:**\nDistributed execution setup and parallel test execution are implemented (Appium Server, SauceLabs, BrowserStack etc).\n\n**NEBo Tasks:**\nImplement distributed solutions (including cloud) for Mobile UI Test Automation.\n• Use provided codebase and testing platform for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Automate at least 10 Test scenarios\n• Implement parallel test execution on multiple Emulators\n• Implement parallel test execution on cloud-hosted testing platform\n• Implement parallel test execution on Real Devices",
      "category": "Lead Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 198,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4497,
      "title": "Implement solutions for automated test environment deployment and clean-up.",
      "description": "**Descriptions:**\nProgrammatic start/stop of test tools (e.g. Appium Server). Programmatic start/stop of mobile device emulators. Programmatic app installation / uninstallation. Programmatic clean-up of test artifacts.\n\n**Artifacts:**\nTest Scenarios that programmatically automate the following operations:\n• start/stop of test tools (e.g. Appium Server)\n• start/stop of mobile device emulators\n• app installation/uninstallation\n• clean-up of test artifacts.\n\n**NEBo Tasks:**\nImplement solutions for automated test environment deployment and clean-up.\n• Use provided codebase and testing demo app for creating and running test cases test cases\n• Setup Test Automation framework provided in the codebase.\n• Implement start/stop of test tools.\n• Implement start/stop of mobile device emulators.\n• Implement demo application installation / uninstallation.\n• Setup clean-up of test artifacts.",
      "category": "Lead Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 199,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4498,
      "title": "Design Mobile Test Automation solution visions based on a practical experience of Mobile Test Automation architecture components, their functions, relations, and integration.",
      "description": "**Descriptions:**\nTest Automation Vision and POC / Project Launch Support services and guidelines.\n\n**Artifacts:**\nParticipation in Test Automation Vision and POC / Project Launch Support services. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 200,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4499,
      "title": "Perform Mobile Test Automation solutions evaluation, identifies bottlenecks, define and drive implementation of improvements.",
      "description": "**Descriptions:**\nHow to evaluate technology solutions. Factors to consider. Software Testing Process Assessment service and guidelines.\n\n**Artifacts:**\nParticipation in Software Testing Process Assessment service. Corresponding deliverables produced.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 201,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4500,
      "title": "Utilize best practices and industry standards of building distributed architecture for Mobile automation.",
      "description": "**Descriptions:**\nBest practices and industry standards of building distributed architecture for Mobile Test Automation.\n\n**Artifacts:**\nExamples of Best Practices utilized on a project.",
      "category": "Expert Test Automation Engineer",
      "module": "C# Mobile Test Automation",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 202,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4501,
      "title": "Provide feedback on hard and soft skills to team members in the scope of performance reviews",
      "description": "**Artifacts:**\nEvidence of participation in performance review session (e.g. emails).",
      "category": "Middle Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 203,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4502,
      "title": "Develop e-learning / conduct training.",
      "description": "**Artifacts:**\nCornerstone. https://softserve.csod.com/ui/lms-learner-home/home?tab_page_id=-200300006\n\n**Learning Resources:**\nhttps://softserve.csod.com/ui/lms-learner-home/home?tab_page_id=-200300006",
      "category": "Senior Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 204,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4503,
      "title": "Do Mentoring for associates outside current project.",
      "description": "**Artifacts:**\nMentorship plans.Mentorship Confluence page:https://confluence.softserveinc.com/display/MO/Mentorship+plans+QMO\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/GlobalLDOperationsandExcellence/SitePages/MO-MENTORING-120591491.aspx?web=1",
      "category": "Senior Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 205,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4504,
      "title": "Participate as an expert in SoftServe external educational programs (ITA, University Programs).",
      "description": "**Artifacts:**\nList of ITA Experts:https://confluence.softserveinc.com/display/SSITA/Pages+of+Experts\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/QualityManagementOffice/SitePages/How-to-become-ITA-expert-from-QMO.aspx",
      "category": "Senior Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 206,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4505,
      "title": "Participate in Performance review sessions as an evaluator. Assess hard skills, identify gaps, provide recommendations, and recognize achievements.",
      "description": "**Artifacts:**\nEvidence of participation in performance review session (e.g. emails).",
      "category": "Senior Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 207,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4506,
      "title": "Participate in QMO Partners, Technical Interview, or Subject Matter Experts Networks.",
      "description": "**Artifacts:**\nQMO Partners: https://confluence.softserveinc.com/display/QCdep/QMO+Partners\n• Technical Interviews: https://confluence.softserveinc.com/display/SDO/Technical+Interviewers+and+Candidate+Profiles#TechnicalInterviewersandCandidateProfiles-TestAutomation(TA)\n• Knowledge Evaluators: https://confluence.softserveinc.com/display/QCdep/Test+Automation+Knowledge+Evaluators\n• Subject Matter Experts: ask QMO\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/FunctionalServicesAdministrationFSA/SitePages/FSA-Knowledge-Evaluation-533171125.aspx\n• https://softserveinc.sharepoint.com/sites/QualityManagementOffice/SitePages/QMO-Partners.aspx\n• https://softserveinc.sharepoint.com/sites/QualityManagementOffice/SitePages/Technical-Interviewers.aspx",
      "category": "Senior Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 208,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4507,
      "title": "Develop knowledge libraries such as Best Practices, training, and templates for internal company use.",
      "description": "**Artifacts:**\nConfluence pages, Cornerstone. https://softserve.csod.com/ui/lms-learner-home/home?tab_page_id=-200300006\n\n**Learning Resources:**\nhttps://softserve.csod.com/ui/lms-learner-home/home?tab_page_id=-200300006",
      "category": "Lead Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 209,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4508,
      "title": "Present on internal or external IT events.",
      "description": "**Artifacts:**\nDelivered presentations.",
      "category": "Lead Test Automation Engineer",
      "module": "Cross-Company Contribution",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 210,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4509,
      "title": "Pass onboarding and educational courses of Generative AI application and usage within the role on the project and company.",
      "description": "**Descriptions:**\nGain an understanding of Generative AI concepts, learn how to use Generative AI assistants, and apply this technology to your job responsibilities. Ensure you understand both the technical aspects and proper usage policies for Generative AI tools in your specific project and the entire company.\n\n**Outcomes:**\nConfirmation of completed training (system record, email notification, certificate of completion, etc.).\n\n**Learning Resources:**\nhttps://softserve.csod.com/ui/lms-learning-details/app/curriculum/1a0ec61b-50ef-4278-be20-907e5e390270",
      "category": "Junior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 211,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4510,
      "title": "Use default functionality, commands, and prompts suggested by Generative AI tools to create outcomes.",
      "description": "**Descriptions:**\nWhen using Generative AI tools, use their built-in features, basic settings, and standard commands that the AI suggests rather than trying complex techniques or customizations.\n\n**Outcomes:**\nExamples of conversations, prompts, and corresponding Gen AI outputs.\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/GenerativeAI-ProductivityBoostinSDLC/Lists/Gen%20AIPowered%20Tools/AllItems.aspx?ovuser=6c51c659%2D9d52%2D41af%2D81f7%2Ddde16380e813%2Comelnychuk%40softserveinc%2Ecom&OR=Teams%2DHL&CT=1740499218120&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI1MC8yNTAxMDYyMDQxMiJ9",
      "category": "Junior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 212,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4511,
      "title": "Follow fundamental ethical principles in AI (fairness, transparency, and accountability), and be familiar with basic data privacy concepts and major regulations like GDPR and CCPA.",
      "description": "**Descriptions:**\nApply fundamental ethical principles of Generative AI (including fairness, transparency, and accountability) and knowledge of GDPR and CCPA to ensure compliance with data privacy standards, identify potential biases in AI systems, and ensure sensitive data is protected.\n\n**Outcomes:**\nConversations history in any Generative AI tool that comply with data privacy policies and standards.\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/GenerativeAI-ProductivityBoostinSDLC/SitePages/Toolset-Usage-Policy.aspx?csf=1&web=1&e=HAFHka",
      "category": "Junior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 213,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4512,
      "title": "Use Generative AI tools on daily basis, integrate AI functionalities in daily processes and tasks to create outcomes.",
      "description": "**Descriptions:**\nIncorporate AI technologies into your everyday activities to save time, improve productivity, and generate results more efficiently. Use AI assistants to help automate tasks, analyze data, generate ideas, create content, make decisions, or any other activities relevant to your work.\n\n**Outcomes:**\nSample outputs demonstrating the regular use of Gen AI in your work (AI-generated reports, summaries, code snippets, and others).\n\n**Learning Resources:**\nhttps://softserveinc.sharepoint.com/sites/GenerativeAI-ProductivityBoostinSDLC/Lists/Gen%20AIPowered%20Tools/AllItems.aspx?ovuser=6c51c659%2D9d52%2D41af%2D81f7%2Ddde16380e813%2Comelnychuk%40softserveinc%2Ecom&OR=Teams%2DHL&CT=1740499218120&clickparams=eyJBcHBOYW1lIjoiVGVhbXMtRGVza3RvcCIsIkFwcFZlcnNpb24iOiI1MC8yNTAxMDYyMDQxMiJ9",
      "category": "Middle Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 214,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4513,
      "title": "Apply advanced prompting techniques to increase Generative AI efficiency for tasks with complex context to create outcomes (zero-shot, chain of thought etc.).",
      "description": "**Descriptions:**\nApply appropriate prompting techniques considering the nature, size, and complexity of the task to maintain the relevance and accuracy of Gen AI outputs. Prompting techniques may include but are not limited to zero-shot prompting, few-shot prompting, chain of thought prompting, persona/tone setting, and tree of thoughts.\n\n**Outcomes:**\nSample outputs demonstrating the application of corresponding to task-specific prompting techniques (AI-generated reports, summaries, code snippets, or others).\n\n**Learning Resources:**\nhttps://www.promptingguide.ai/techniques",
      "category": "Middle Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 215,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4514,
      "title": "Actively engage with the Gen AI community by participating in events and courses. Share and promote Generative AI practices and use cases.",
      "description": "**Descriptions:**\nEngage in Generative AI community events or training sessions to share insights and promote best practices. Contribute through presentations, reference materials, or discussions to foster collaboration and knowledge exchange.\n\n**Outcomes:**\nPresentation slides, blog posts, or articles shared with the Gen AI community.",
      "category": "Middle Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 216,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4515,
      "title": "Refine and tune prompts for specific tasks to improve accuracy and relevance, create prompting flows having right decomposition techniques to receive right answers from model.",
      "description": "**Descriptions:**\nIteratively refine and optimize prompts for specific tasks to maximize the relevance and accuracy of Gen AI outputs. Prompting techniques used during the refinement process may include, but are not limited to, chunking/decomposition, self-critique/review prompting, context-based prompting, role-based prompting, and instruction-focused prompting.\n\n**Outcomes:**\nSample outputs demonstrating the application of corresponding to task-specific prompt optimization techniques (AI-generated reports, summaries, code snippets, or others).\n\n**Learning Resources:**\nhttps://www.promptingguide.ai/techniques",
      "category": "Senior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 217,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4516,
      "title": "Apply advanced Generative AI prompting strategies to complex tasks to create outcomes.",
      "description": "**Descriptions:**\nApply advanced prompting strategies to effectively leverage Generative AI capabilities for complex tasks, generating high-quality outcomes and solutions that may include but are not limited to: competitive analysis, conditional scenario setting, meta prompting, and benchmarking assistance.\n\n**Outcomes:**\nSample outputs demonstrating application of corresponding to task-specific prompting strategies (AI-generated reports, summaries, code snippets, or others).\n\n**Learning Resources:**\nhttps://www.promptingguide.ai/techniques",
      "category": "Senior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 218,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4517,
      "title": "Design new prompting templates for tasks within the project to create outcomes.",
      "description": "**Descriptions:**\nCreate and document new AI prompting templates (repeatable approach for structuring prompts to achieve specific, reliable outcomes when interacting with an AI model) to standardize usage across tasks, ensuring efficient and high-quality outputs. Identify relevant parameters, constraints, and best practices so these templates produce clear, concise prompts that deliver consistent results.\n\n**Outcomes:**\nRepository of prompting templates (in project environment, within Gen AI assistant, etc.).\n\n**Learning Resources:**\nhttps://prompts.chat/",
      "category": "Senior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 219,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4518,
      "title": "Contribute to Generative AI expertise development within the company to extend corporate knowledge base.",
      "description": "**Descriptions:**\nShare Generative AI knowledge, insights, and best practices with colleagues, contributing to the development of Generative AI expertise within the company and expanding the corporate knowledge base. This may involve conducting internal training sessions or workshops, developing educational resources or documentation, and actively participating in communities of practice to foster collaboration and knowledge sharing around Generative AI.\n\n**Outcomes:**\nTraining materials, workshops, or presentations delivered to colleagues on Generative AI concepts, tools, and best practices.",
      "category": "Senior Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 220,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4519,
      "title": "Assess and document project activities towards Generative AI applicability and optimization.",
      "description": "**Descriptions:**\nAnalyse project SDLC workflows, assessing Gen AI integration feasibility, documenting findings, and defining use cases where Gen AI can be used to accelerate efficiency and productivity. Identify SDLC issues that limit usage of Gen AI accelerators, and provide recommendations for improvements.\n\n**Outcomes:**\nAssessment reports on project SDLC, highlighting Gen AI integration feasibility, potential Gen AI use cases and their forecasted impact, and SDLC improvement recommendations required to utilize Gen AI's full potential.",
      "category": "Lead Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 221,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4520,
      "title": "Select and adopt engineering metrics to measure Generative AI efficiency on the project.",
      "description": "**Descriptions:**\nAnalyse project SDLC and identify metrics that quantify output, quality, and business value of incorporation of Gen AI accelerators considering project objectives and needs. Implement hands-on driving metrics and track them within the project.\n\n**Outcomes:**\nProject dashboards, metric reports, or documentation displaying selected metrics and their impact.",
      "category": "Lead Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 222,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4521,
      "title": "Select and adopt Generative AI use cases on the project to create outcomes according to defined practices.",
      "description": "**Descriptions:**\nSelect, prioritize, and drive iterative adoption of Generative AI use cases in alignment with project goals and needs.\n\n**Outcomes:**\nRoadmaps, plans, status reports of Gen AI use cases adoption. Project-specific Gen AI knowledge base.",
      "category": "Lead Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 223,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4522,
      "title": "Contribute to the Gen AI community by sharing insights through blog posts, talks, or webinars, collaborate on open-source projects, and experiment with cutting-edge techniques.",
      "description": "**Descriptions:**\nShare Generative AI insights through blog posts, talks, or webinars, collaborate on open-source projects, and experiment with advanced techniques to drive innovation within the community. Encourage knowledge exchange by offering best practices and practical resources.\n\n**Outcomes:**\nBlog posts, articles, or presentations sharing insights and expertise on Generative AI.",
      "category": "Lead Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 224,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4523,
      "title": "Select and evaluate new Generative AI tools to integrate into project and corporate knowledge base.",
      "description": "**Descriptions:**\nInvestigate available Gen AI tools, assessing capabilities, ease of integration, and alignment with organizational standards. Conduct pilot tests, gather feedback, and recommend whether to adopt these tools to keep project and company resources up to date.\n\n**Outcomes:**\nReports, documents, or presentations summarizing test results and recommending tool adoption.\n\n**Learning Resources:**\nLINK",
      "category": "Expert Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 225,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4524,
      "title": "Consult internal and external customers on Generative AI applicability including demo and presentational activities.",
      "description": "**Descriptions:**\nProvide expert guidance to stakeholders on how Generative AI can address specific business or technical needs. Offer demos, proofs of concept, and recommendations, tailoring Generative AI-driven solutions to each client’s objectives and constraints.\n\n**Outcomes:**\nPresentation materials (slides, demos, proposals, visions) or follow-up reports on potential Generative AI solutions.",
      "category": "Expert Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 226,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4525,
      "title": "Promote Generative AI expertise within and outside the company.",
      "description": "**Descriptions:**\nPromote the understanding and adoption of Generative AI tools and techniques within and outside the company. Conduct workshops, presentations, or publish supportive materials to build broader awareness and drive acceptance of Gen AI solutions.\n\n**Outcomes:**\nTraining materials, event records, or articles/posts demonstrating successful Generative AI implementations.",
      "category": "Expert Test Automation Engineer",
      "module": "Generative AI",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 227,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    },
    {
      "id": 4526,
      "title": "Design Basic Load Test Scenarios",
      "description": "**Descriptions:**\nUse tools like Apache JMeter or NBomber to create a simple load test scenario that simulates typical user actions. This involves defining virtual users (threads), ramp-up times, and assertions on key responses. Develop a test plan that mimics realistic usage (e.g. login, browse, submit forms) under increasing load. Configure the test tool (e.g. JMeter .jmx or a NBomber C# script) with appropriate parameters.\n\n**Artifacts:**\nLoad test configuration files (.jmx or C# test scripts) and initial test report data. For example, NBomber generates an HTML report for each run\n\n**Outcomes:**\nAbility to set up and execute a basic load test, generating performance metrics (response times, throughput). The engineer can identify obvious issues under light load and produce a simple report of results.\n\n**Learning Resources:**\nhttps://pflb.us/blog/performance-tester-roles-responsibilities/#:~:text=,load%2C%20stress%2C%20endurance%2C%20etc\r\nhttps://nbomber.com/#:~:text=",
      "category": "Junior Test Automation Engineer",
      "module": "Performance Testing",
      "status": "not-started",
      "notes": null,
      "created_at": "2025-08-01 17:06:29",
      "updated_at": "2025-08-01 17:06:29",
      "order_index": 228,
      "attachment_filename": null,
      "attachment_original_name": null,
      "attachment_path": null,
      "questions": []
    }
  ],
  "metadata": {
    "totalTopics": 229,
    "version": "1.0.0"
  }
}